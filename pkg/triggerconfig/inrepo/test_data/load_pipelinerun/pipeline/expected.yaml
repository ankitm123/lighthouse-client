apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: demo-pipeline
spec:
  pipelineSpec:
    params:
      - default: gcr.io/christiewilson-catfactory
        name: image-registry
        type: string
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: fetch-from-git
        params:
          - name: url
            value: https://github.com/GoogleContainerTools/skaffold
          - name: revision
            value: v0.32.0
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskRef:
          name: git-clone
        workspaces:
          - name: output
            workspace: git-source
      - name: skaffold-unit-tests
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        runAfter:
          - fetch-from-git
        taskRef:
          name: unit-tests
        workspaces:
          - name: source
            workspace: git-source
      - name: build-skaffold-web
        params:
          - name: IMAGE
            value: $(params.image-registry)/leeroy-web
          - name: CONTEXT
            value: examples/microservices/leeroy-web
          - name: DOCKERFILE
            value: $(workspaces.source.path)/examples/microservices/leeroy-web/Dockerfile
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        runAfter:
          - skaffold-unit-tests
        taskRef:
          name: kaniko
        workspaces:
          - name: source
            workspace: git-source
      - name: build-skaffold-app
        params:
          - name: IMAGE
            value: $(params.image-registry)/leeroy-app
          - name: CONTEXT
            value: examples/microservices/leeroy-app
          - name: DOCKERFILE
            value: $(workspaces.source.path)/examples/microservices/leeroy-app/Dockerfile
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        runAfter:
          - skaffold-unit-tests
        taskRef:
          name: kaniko
        workspaces:
          - name: source
            workspace: git-source
      - name: deploy-app
        params:
          - name: imageURL
            value: $(params.image-registry)/leeroy-app@$(tasks.build-skaffold-app.results.IMAGE_DIGEST)
          - name: path
            value: $(workspaces.source.path)/examples/microservices/leeroy-app/kubernetes/deployment.yaml
          - name: yqArg
            value: -d1
          - name: yamlPathToImage
            value: spec.template.spec.containers[0].image
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskRef:
          name: demo-deploy-kubectl
        workspaces:
          - name: source
            workspace: git-source
      - name: deploy-web
        params:
          - name: imageURL
            value: $(params.image-registry)/leeroy-web@$(tasks.build-skaffold-web.results.IMAGE_DIGEST)
          - name: path
            value: $(workspaces.source.path)/examples/microservices/leeroy-web/kubernetes/deployment.yaml
          - name: yqArg
            value: -d1
          - name: yamlPathToImage
            value: spec.template.spec.containers[0].image
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskRef:
          name: demo-deploy-kubectl
        workspaces:
          - name: source
            workspace: git-source
    workspaces:
      - name: git-source
  taskRunTemplate: {}
  timeouts:
    pipeline: 24h0m0s
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  pipelineSpec:
    finally:
      - name: lint-pr-comment
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              image: ghcr.io/jenkins-x/jx-gitops:0.3.1
              name: lint-pr-comment
              script: |
                #!/bin/sh
                set -x
                . .jx/variables.sh
                jx gitops pr comment -c "$(cat issues.md)"
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              env:
                - name: FOO
                  value: one
              image: common-image
              name: common-build
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    finally:
      - name: from-build-pack-finally
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              env:
                - name: FOO
                  value: finally
              image: common-image
              name: common-build
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              env:
                - name: FOO
                  value: foo
              image: common-image
              name: common-build
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    lighthouse.jenkins-x.io/loadFileRefs: .*
  creationTimestamp: null
  name: demo-pipeline
spec:
  pipelineSpec:
    params:
      - default: gcr.io/christiewilson-catfactory
        name: image-registry
        type: string
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: fetch-from-git
        params:
          - name: url
            value: https://github.com/GoogleContainerTools/skaffold
          - name: revision
            value: v0.32.0
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: git url to clone
              name: url
              type: string
            - default: master
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: revision
              type: string
            - default: "true"
              description: defines if the resource should initialize and fetch the submodules
              name: submodules
              type: string
            - default: "1"
              description: performs a shallow clone where only the most recent commit(s) will be fetched
              name: depth
              type: string
            - default: "true"
              description: defines if http.sslVerify should be set to true or false in the global git config
              name: sslVerify
              type: string
            - default: ""
              description: subdirectory inside the "output" workspace to clone the git repo into
              name: subdirectory
              type: string
            - default: "false"
              description: clean out the contents of the repo's destination directory (if it already exists) before trying to clone the repo there
              name: deleteExisting
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          results:
            - description: The precise commit SHA that was fetched by this Task
              name: commit
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              image: ko://github.com/tektoncd/pipeline/cmd/git-init
              name: clone
              script: |-
                CHECKOUT_DIR="$(workspaces.output.path)/$(params.subdirectory)"
                cleandir() {
                  # Delete any existing contents of the repo directory if it exists.
                  #
                  # We don't just "rm -rf $CHECKOUT_DIR" because $CHECKOUT_DIR might be "/"
                  # or the root of a mounted volume.
                  if [[ -d "$CHECKOUT_DIR" ]] ; then
                    # Delete non-hidden files and directories
                    rm -rf "$CHECKOUT_DIR"/*
                    # Delete files and directories starting with . but excluding ..
                    rm -rf "$CHECKOUT_DIR"/.[!.]*
                    # Delete files and directories starting with .. plus any other character
                    rm -rf "$CHECKOUT_DIR"/..?*
                  fi
                }
                if [[ "$(params.deleteExisting)" == "true" ]] ; then
                  cleandir
                fi
                /ko-app/git-init \
                  -url "$(params.url)" \
                  -revision "$(params.revision)" \
                  -path "$CHECKOUT_DIR" \
                  -sslVerify="$(params.sslVerify)" \
                  -submodules="$(params.submodules)" \
                  -depth="$(params.depth)"
                cd "$CHECKOUT_DIR"
                RESULT_SHA="$(git rev-parse HEAD | tr -d '\n')"
                EXIT_CODE="$?"
                if [ "$EXIT_CODE" != 0 ]
                then
                  exit $EXIT_CODE
                fi
                # Make sure we don't add a trailing newline to the result!
                echo -n "$RESULT_SHA" > $(results.commit.path)
          workspaces:
            - description: The git repo will be cloned onto the volume backing this workspace
              name: output
        workspaces:
          - name: output
            workspace: git-source
      - name: skaffold-unit-tests
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        runAfter:
          - fetch-from-git
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              env:
                - name: GOPATH
                  value: /workspace/go
              image: golang
              name: run-tests
              script: |-
                # The intention behind this example Task is to run unit test, however we
                # currently do nothing to ensure that a unit test issue doesn't cause this example
                # to fail unnecessarily. In the future we could re-introduce the unit tests (since
                # we are now pinning the version of Skaffold we pull) or use Tekton Pipelines unit tests.
                echo "pass"
              workingDir: $(workspaces.source.path)
          workspaces:
            - mountPath: /workspace/source/go/src/github.com/GoogleContainerTools/skaffold
              name: source
        workspaces:
          - name: source
            workspace: git-source
      - name: build-skaffold-web
        params:
          - name: IMAGE
            value: $(params.image-registry)/leeroy-web
          - name: CONTEXT
            value: examples/microservices/leeroy-web
          - name: DOCKERFILE
            value: $(workspaces.source.path)/examples/microservices/leeroy-web/Dockerfile
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        runAfter:
          - skaffold-unit-tests
        taskSpec:
          metadata: {}
          params:
            - description: Name (reference) of the image to build.
              name: IMAGE
              type: string
            - default: ./Dockerfile
              description: Path to the Dockerfile to build.
              name: DOCKERFILE
              type: string
            - default: ./
              description: The build context used by Kaniko.
              name: CONTEXT
              type: string
            - default: ""
              name: EXTRA_ARGS
              type: string
            - default: gcr.io/kaniko-project/executor:latest
              description: The image on which builds will run
              name: BUILDER_IMAGE
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          results:
            - description: Digest of the image just built.
              name: IMAGE_DIGEST
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - command:
                - /kaniko/executor
                - $(params.EXTRA_ARGS)
                - --dockerfile=$(params.DOCKERFILE)
                - --context=$(workspaces.source.path)/$(params.CONTEXT)
                - --destination=$(params.IMAGE)
                - --oci-layout-path=$(workspaces.source.path)/$(params.CONTEXT)/image-digest
              computeResources: {}
              env:
                - name: DOCKER_CONFIG
                  value: /tekton/home/.docker
              image: $(params.BUILDER_IMAGE)
              name: build-and-push
              securityContext:
                runAsUser: 0
              workingDir: $(workspaces.source.path)
            - args:
                - -images=[{"name":"$(params.IMAGE)","type":"image","url":"$(params.IMAGE)","digest":"","OutputImageDir":"$(workspaces.source.path)/$(params.CONTEXT)/image-digest"}]
                - -terminationMessagePath=$(params.CONTEXT)/image-digested
              command:
                - /ko-app/imagedigestexporter
              computeResources: {}
              image: ko://github.com/tektoncd/pipeline/cmd/imagedigestexporter
              name: write-digest
              securityContext:
                runAsUser: 0
              workingDir: $(workspaces.source.path)
            - computeResources: {}
              image: stedolan/jq
              name: digest-to-results
              script: cat $(params.CONTEXT)/image-digested | jq '.[0].value' -rj | tee /tekton/results/IMAGE_DIGEST
              workingDir: $(workspaces.source.path)
          workspaces:
            - name: source
        workspaces:
          - name: source
            workspace: git-source
      - name: build-skaffold-app
        params:
          - name: IMAGE
            value: $(params.image-registry)/leeroy-app
          - name: CONTEXT
            value: examples/microservices/leeroy-app
          - name: DOCKERFILE
            value: $(workspaces.source.path)/examples/microservices/leeroy-app/Dockerfile
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        runAfter:
          - skaffold-unit-tests
        taskSpec:
          metadata: {}
          params:
            - description: Name (reference) of the image to build.
              name: IMAGE
              type: string
            - default: ./Dockerfile
              description: Path to the Dockerfile to build.
              name: DOCKERFILE
              type: string
            - default: ./
              description: The build context used by Kaniko.
              name: CONTEXT
              type: string
            - default: ""
              name: EXTRA_ARGS
              type: string
            - default: gcr.io/kaniko-project/executor:latest
              description: The image on which builds will run
              name: BUILDER_IMAGE
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          results:
            - description: Digest of the image just built.
              name: IMAGE_DIGEST
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - command:
                - /kaniko/executor
                - $(params.EXTRA_ARGS)
                - --dockerfile=$(params.DOCKERFILE)
                - --context=$(workspaces.source.path)/$(params.CONTEXT)
                - --destination=$(params.IMAGE)
                - --oci-layout-path=$(workspaces.source.path)/$(params.CONTEXT)/image-digest
              computeResources: {}
              env:
                - name: DOCKER_CONFIG
                  value: /tekton/home/.docker
              image: $(params.BUILDER_IMAGE)
              name: build-and-push
              securityContext:
                runAsUser: 0
              workingDir: $(workspaces.source.path)
            - args:
                - -images=[{"name":"$(params.IMAGE)","type":"image","url":"$(params.IMAGE)","digest":"","OutputImageDir":"$(workspaces.source.path)/$(params.CONTEXT)/image-digest"}]
                - -terminationMessagePath=$(params.CONTEXT)/image-digested
              command:
                - /ko-app/imagedigestexporter
              computeResources: {}
              image: ko://github.com/tektoncd/pipeline/cmd/imagedigestexporter
              name: write-digest
              securityContext:
                runAsUser: 0
              workingDir: $(workspaces.source.path)
            - computeResources: {}
              image: stedolan/jq
              name: digest-to-results
              script: cat $(params.CONTEXT)/image-digested | jq '.[0].value' -rj | tee /tekton/results/IMAGE_DIGEST
              workingDir: $(workspaces.source.path)
          workspaces:
            - name: source
        workspaces:
          - name: source
            workspace: git-source
      - name: deploy-app
        params:
          - name: imageURL
            value: $(params.image-registry)/leeroy-app@$(tasks.build-skaffold-app.results.IMAGE_DIGEST)
          - name: path
            value: $(workspaces.source.path)/examples/microservices/leeroy-app/kubernetes/deployment.yaml
          - name: yqArg
            value: -d1
          - name: yamlPathToImage
            value: spec.template.spec.containers[0].image
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: Path to the manifest to apply
              name: path
              type: string
            - description: Okay this is a hack, but I didn't feel right hard-coding `-d1` down below
              name: yqArg
              type: string
            - description: The path to the image to replace in the yaml manifest (arg to yq)
              name: yamlPathToImage
              type: string
            - description: The URL of the image to deploy
              name: imageURL
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - args:
                - w
                - -i
                - $(params.yqArg)
                - $(params.path)
                - $(params.yamlPathToImage)
                - $(params.imageURL)
              command:
                - yq
              computeResources: {}
              image: mikefarah/yq
              name: replace-image
            - args:
                - apply
                - -f
                - $(params.path)
              command:
                - kubectl
              computeResources: {}
              image: lachlanevenson/k8s-kubectl
              name: run-kubectl
          workspaces:
            - name: source
        workspaces:
          - name: source
            workspace: git-source
      - name: deploy-web
        params:
          - name: imageURL
            value: $(params.image-registry)/leeroy-web@$(tasks.build-skaffold-web.results.IMAGE_DIGEST)
          - name: path
            value: $(workspaces.source.path)/examples/microservices/leeroy-web/kubernetes/deployment.yaml
          - name: yqArg
            value: -d1
          - name: yamlPathToImage
            value: spec.template.spec.containers[0].image
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: Path to the manifest to apply
              name: path
              type: string
            - description: Okay this is a hack, but I didn't feel right hard-coding `-d1` down below
              name: yqArg
              type: string
            - description: The path to the image to replace in the yaml manifest (arg to yq)
              name: yamlPathToImage
              type: string
            - description: The URL of the image to deploy
              name: imageURL
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - args:
                - w
                - -i
                - $(params.yqArg)
                - $(params.path)
                - $(params.yamlPathToImage)
                - $(params.imageURL)
              command:
                - yq
              computeResources: {}
              image: mikefarah/yq
              name: replace-image
            - args:
                - apply
                - -f
                - $(params.path)
              command:
                - kubectl
              computeResources: {}
              image: lachlanevenson/k8s-kubectl
              name: run-kubectl
          workspaces:
            - name: source
        workspaces:
          - name: source
            workspace: git-source
    workspaces:
      - name: git-source
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    lighthouse.jenkins-x.io/loadFileRefs: .*
  creationTimestamp: null
  name: demo-pipeline
spec:
  pipelineSpec:
    params:
      - default: gcr.io/christiewilson-catfactory
        name: image-registry
        type: string
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: fetch-from-git
        params:
          - name: url
            value: https://github.com/GoogleContainerTools/skaffold
          - name: revision
            value: v0.32.0
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: git url to clone
              name: url
              type: string
            - default: master
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: revision
              type: string
            - default: "true"
              description: defines if the resource should initialize and fetch the submodules
              name: submodules
              type: string
            - default: "1"
              description: performs a shallow clone where only the most recent commit(s) will be fetched
              name: depth
              type: string
            - default: "true"
              description: defines if http.sslVerify should be set to true or false in the global git config
              name: sslVerify
              type: string
            - default: ""
              description: subdirectory inside the "output" workspace to clone the git repo into
              name: subdirectory
              type: string
            - default: "false"
              description: clean out the contents of the repo's destination directory (if it already exists) before trying to clone the repo there
              name: deleteExisting
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          results:
            - description: The precise commit SHA that was fetched by this Task
              name: commit
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              image: ko://github.com/tektoncd/pipeline/cmd/git-init
              name: clone
              script: |-
                CHECKOUT_DIR="$(workspaces.output.path)/$(params.subdirectory)"
                cleandir() {
                  # Delete any existing contents of the repo directory if it exists.
                  #
                  # We don't just "rm -rf $CHECKOUT_DIR" because $CHECKOUT_DIR might be "/"
                  # or the root of a mounted volume.
                  if [[ -d "$CHECKOUT_DIR" ]] ; then
                    # Delete non-hidden files and directories
                    rm -rf "$CHECKOUT_DIR"/*
                    # Delete files and directories starting with . but excluding ..
                    rm -rf "$CHECKOUT_DIR"/.[!.]*
                    # Delete files and directories starting with .. plus any other character
                    rm -rf "$CHECKOUT_DIR"/..?*
                  fi
                }
                if [[ "$(params.deleteExisting)" == "true" ]] ; then
                  cleandir
                fi
                /ko-app/git-init \
                  -url "$(params.url)" \
                  -revision "$(params.revision)" \
                  -path "$CHECKOUT_DIR" \
                  -sslVerify="$(params.sslVerify)" \
                  -submodules="$(params.submodules)" \
                  -depth="$(params.depth)"
                cd "$CHECKOUT_DIR"
                RESULT_SHA="$(git rev-parse HEAD | tr -d '\n')"
                EXIT_CODE="$?"
                if [ "$EXIT_CODE" != 0 ]
                then
                  exit $EXIT_CODE
                fi
                # Make sure we don't add a trailing newline to the result!
                echo -n "$RESULT_SHA" > $(results.commit.path)
          workspaces:
            - description: The git repo will be cloned onto the volume backing this workspace
              name: output
        workspaces:
          - name: output
            workspace: git-source
      - name: skaffold-unit-tests
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        runAfter:
          - fetch-from-git
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              env:
                - name: GOPATH
                  value: /workspace/go
              image: golang
              name: run-tests
              script: |-
                # The intention behind this example Task is to run unit test, however we
                # currently do nothing to ensure that a unit test issue doesn't cause this example
                # to fail unnecessarily. In the future we could re-introduce the unit tests (since
                # we are now pinning the version of Skaffold we pull) or use Tekton Pipelines unit tests.
                echo "pass"
              workingDir: $(workspaces.source.path)
          workspaces:
            - mountPath: /workspace/source/go/src/github.com/GoogleContainerTools/skaffold
              name: source
        workspaces:
          - name: source
            workspace: git-source
      - name: build-skaffold-web
        params:
          - name: IMAGE
            value: $(params.image-registry)/leeroy-web
          - name: CONTEXT
            value: examples/microservices/leeroy-web
          - name: DOCKERFILE
            value: $(workspaces.source.path)/examples/microservices/leeroy-web/Dockerfile
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        runAfter:
          - skaffold-unit-tests
        taskSpec:
          metadata: {}
          params:
            - description: Name (reference) of the image to build.
              name: IMAGE
              type: string
            - default: ./Dockerfile
              description: Path to the Dockerfile to build.
              name: DOCKERFILE
              type: string
            - default: ./
              description: The build context used by Kaniko.
              name: CONTEXT
              type: string
            - default: ""
              name: EXTRA_ARGS
              type: string
            - default: gcr.io/kaniko-project/executor:latest
              description: The image on which builds will run
              name: BUILDER_IMAGE
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          results:
            - description: Digest of the image just built.
              name: IMAGE_DIGEST
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - command:
                - /kaniko/executor
                - $(params.EXTRA_ARGS)
                - --dockerfile=$(params.DOCKERFILE)
                - --context=$(workspaces.source.path)/$(params.CONTEXT)
                - --destination=$(params.IMAGE)
                - --oci-layout-path=$(workspaces.source.path)/$(params.CONTEXT)/image-digest
              computeResources: {}
              env:
                - name: DOCKER_CONFIG
                  value: /tekton/home/.docker
              image: $(params.BUILDER_IMAGE)
              name: build-and-push
              securityContext:
                runAsUser: 0
              workingDir: $(workspaces.source.path)
            - args:
                - -images=[{"name":"$(params.IMAGE)","type":"image","url":"$(params.IMAGE)","digest":"","OutputImageDir":"$(workspaces.source.path)/$(params.CONTEXT)/image-digest"}]
                - -terminationMessagePath=$(params.CONTEXT)/image-digested
              command:
                - /ko-app/imagedigestexporter
              computeResources: {}
              image: ko://github.com/tektoncd/pipeline/cmd/imagedigestexporter
              name: write-digest
              securityContext:
                runAsUser: 0
              workingDir: $(workspaces.source.path)
            - computeResources: {}
              image: stedolan/jq
              name: digest-to-results
              script: cat $(params.CONTEXT)/image-digested | jq '.[0].value' -rj | tee /tekton/results/IMAGE_DIGEST
              workingDir: $(workspaces.source.path)
          workspaces:
            - name: source
        workspaces:
          - name: source
            workspace: git-source
      - name: build-skaffold-app
        params:
          - name: IMAGE
            value: $(params.image-registry)/leeroy-app
          - name: CONTEXT
            value: examples/microservices/leeroy-app
          - name: DOCKERFILE
            value: $(workspaces.source.path)/examples/microservices/leeroy-app/Dockerfile
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        runAfter:
          - skaffold-unit-tests
        taskSpec:
          metadata: {}
          params:
            - description: Name (reference) of the image to build.
              name: IMAGE
              type: string
            - default: ./Dockerfile
              description: Path to the Dockerfile to build.
              name: DOCKERFILE
              type: string
            - default: ./
              description: The build context used by Kaniko.
              name: CONTEXT
              type: string
            - default: ""
              name: EXTRA_ARGS
              type: string
            - default: gcr.io/kaniko-project/executor:latest
              description: The image on which builds will run
              name: BUILDER_IMAGE
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          results:
            - description: Digest of the image just built.
              name: IMAGE_DIGEST
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - command:
                - /kaniko/executor
                - $(params.EXTRA_ARGS)
                - --dockerfile=$(params.DOCKERFILE)
                - --context=$(workspaces.source.path)/$(params.CONTEXT)
                - --destination=$(params.IMAGE)
                - --oci-layout-path=$(workspaces.source.path)/$(params.CONTEXT)/image-digest
              computeResources: {}
              env:
                - name: DOCKER_CONFIG
                  value: /tekton/home/.docker
              image: $(params.BUILDER_IMAGE)
              name: build-and-push
              securityContext:
                runAsUser: 0
              workingDir: $(workspaces.source.path)
            - args:
                - -images=[{"name":"$(params.IMAGE)","type":"image","url":"$(params.IMAGE)","digest":"","OutputImageDir":"$(workspaces.source.path)/$(params.CONTEXT)/image-digest"}]
                - -terminationMessagePath=$(params.CONTEXT)/image-digested
              command:
                - /ko-app/imagedigestexporter
              computeResources: {}
              image: ko://github.com/tektoncd/pipeline/cmd/imagedigestexporter
              name: write-digest
              securityContext:
                runAsUser: 0
              workingDir: $(workspaces.source.path)
            - computeResources: {}
              image: stedolan/jq
              name: digest-to-results
              script: cat $(params.CONTEXT)/image-digested | jq '.[0].value' -rj | tee /tekton/results/IMAGE_DIGEST
              workingDir: $(workspaces.source.path)
          workspaces:
            - name: source
        workspaces:
          - name: source
            workspace: git-source
      - name: deploy-app
        params:
          - name: imageURL
            value: $(params.image-registry)/leeroy-app@$(tasks.build-skaffold-app.results.IMAGE_DIGEST)
          - name: path
            value: $(workspaces.source.path)/examples/microservices/leeroy-app/kubernetes/deployment.yaml
          - name: yqArg
            value: -d1
          - name: yamlPathToImage
            value: spec.template.spec.containers[0].image
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: Path to the manifest to apply
              name: path
              type: string
            - description: Okay this is a hack, but I didn't feel right hard-coding `-d1` down below
              name: yqArg
              type: string
            - description: The path to the image to replace in the yaml manifest (arg to yq)
              name: yamlPathToImage
              type: string
            - description: The URL of the image to deploy
              name: imageURL
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - args:
                - w
                - -i
                - $(params.yqArg)
                - $(params.path)
                - $(params.yamlPathToImage)
                - $(params.imageURL)
              command:
                - yq
              computeResources: {}
              image: mikefarah/yq
              name: replace-image
            - args:
                - apply
                - -f
                - $(params.path)
              command:
                - kubectl
              computeResources: {}
              image: lachlanevenson/k8s-kubectl
              name: run-kubectl
          workspaces:
            - name: source
        workspaces:
          - name: source
            workspace: git-source
      - name: deploy-web
        params:
          - name: imageURL
            value: $(params.image-registry)/leeroy-web@$(tasks.build-skaffold-web.results.IMAGE_DIGEST)
          - name: path
            value: $(workspaces.source.path)/examples/microservices/leeroy-web/kubernetes/deployment.yaml
          - name: yqArg
            value: -d1
          - name: yamlPathToImage
            value: spec.template.spec.containers[0].image
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: Path to the manifest to apply
              name: path
              type: string
            - description: Okay this is a hack, but I didn't feel right hard-coding `-d1` down below
              name: yqArg
              type: string
            - description: The path to the image to replace in the yaml manifest (arg to yq)
              name: yamlPathToImage
              type: string
            - description: The URL of the image to deploy
              name: imageURL
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - args:
                - w
                - -i
                - $(params.yqArg)
                - $(params.path)
                - $(params.yamlPathToImage)
                - $(params.imageURL)
              command:
                - yq
              computeResources: {}
              image: mikefarah/yq
              name: replace-image
            - args:
                - apply
                - -f
                - $(params.path)
              command:
                - kubectl
              computeResources: {}
              image: lachlanevenson/k8s-kubectl
              name: run-kubectl
          workspaces:
            - name: source
        workspaces:
          - name: source
            workspace: git-source
    workspaces:
      - name: git-source
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: jx3-test-save-show-results
spec:
  params:
    - name: value_to_save
      value: ""
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - default: ""
        name: value_to_save
        type: string
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    results:
      - description: result_value
        name: result_value
        value: $(tasks.save-results.results.result_value)
    tasks:
      - name: save-results
        params:
          - name: value_to_save
            value: test_demo
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - default: ""
              name: value_to_save
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          results:
            - description: result_value
              name: result_value
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            imagePullPolicy: IfNotPresent
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: ubuntu:jammy
              name: save-result
              script: |
                #!/usr/bin/env sh
                set -ex
                result_value="$(params.value_to_save)"
                echo "results.result_value.path is $(results.result_value.path)"
                echo -n "${result_value}" > $(results.result_value.path)
                echo "result_value is ${result_value}"
      - name: display-results
        params:
          - name: value_to_show
            value: $(tasks.save-results.results.result_value)
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        runAfter:
          - save-results
        taskSpec:
          metadata: {}
          params:
            - default: ""
              name: value_to_show
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            imagePullPolicy: IfNotPresent
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: ubuntu:jammy
              name: show-result
              script: |
                #!/usr/bin/env sh
                set -ex
                value_to_show="$(params.value_to_show)"
                echo "value_to_show is ${value_to_show}"
  taskRunTemplate:
    podTemplate: {}
    serviceAccountName: tekton-bot
  timeouts:
    pipeline: 30m0s
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: pullrequest
spec:
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: git-clone-env-pr
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskRef:
          params:
            - name: url
              value: https://github.com/jenkins-x/jx3-pipeline-catalog.git
            - name: revision
              value: master
            - name: pathInRepo
              value: tasks/git-clone/git-clone-env-pr.yaml
          resolver: git
        workspaces:
          - name: output
            workspace: pipeline-ws
      - name: make-pr
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        runAfter:
          - git-clone-env-pr
        taskRef:
          params:
            - name: url
              value: https://github.com/jenkins-x/jx3-pipeline-catalog.git
            - name: revision
              value: master
            - name: pathInRepo
              value: tasks/environment/pullrequest/make-pr.yaml
          resolver: git
        workspaces:
          - name: output
            workspace: pipeline-ws
      - name: kubetest
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        runAfter:
          - make-pr
        taskRef:
          params:
            - name: url
              value: https://github.com/jenkins-x/jx3-pipeline-catalog.git
            - name: revision
              value: master
            - name: pathInRepo
              value: tasks/kubetest/environment.yaml
          resolver: git
        workspaces:
          - name: output
            workspace: pipeline-ws
    workspaces:
      - name: pipeline-ws
  taskRunTemplate:
    podTemplate: {}
    serviceAccountName: tekton-bot
  timeouts:
    pipeline: 12h0m0s
  workspaces:
    - name: pipeline-ws
      volumeClaimTemplate:
        metadata:
          creationTimestamp: null
        spec:
          accessModes:
            - ReadWriteOnce
          computeResources:
            requests:
              storage: 1Gi
        status: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    lighthouse.jenkins-x.io/cloneURI: https://github.com/jenkins-x/jx.git
  creationTimestamp: "2020-07-20T19:50:21Z"
  generation: 1
  labels:
    branch: PR-7463
    build: "17"
    context: boot-vault
    jenkins.io/pipelineType: build
    lighthouse.jenkins-x.io/baseSHA: c47ce72d4e2991a9440e6d954ecbf79d596f9352
    lighthouse.jenkins-x.io/branch: PR-7463
    lighthouse.jenkins-x.io/buildNum: "17"
    lighthouse.jenkins-x.io/context: boot-vault
    lighthouse.jenkins-x.io/id: f46327af-b47e-11ea-b797-9256b7b8d9b0
    lighthouse.jenkins-x.io/lastCommitSHA: 8a3c5f595cdc3162e46390c72a5d22fb9c89d1df
    lighthouse.jenkins-x.io/refs.org: jenkins-x
    lighthouse.jenkins-x.io/refs.repo: jx
    owner: jenkins-x
    repository: jx
    tekton.dev/pipeline: jenkins-x-jx-pr-7463-boot-vault-9mbgb-17
  name: jenkins-x-jx-pr-7463-boot-vault-9mbgb-17
  namespace: jx
  resourceVersion: "16726271"
  selfLink: /apis/tekton.dev/v1beta1/namespaces/jx/pipelineruns/jenkins-x-jx-pr-7463-boot-vault-9mbgb-17
  uid: 3edf18d1-cac2-11ea-a610-42010a8400cb
spec:
  params:
    - name: version
      value: 0.0.0-SNAPSHOT-PR-7463-17
    - name: build_id
      value: "17"
  pipelineRef:
    apiVersion: tekton.dev/v1beta1
    name: jenkins-x-jx-pr-7463-boot-vault-9mbgb-17
  taskRunTemplate:
    podTemplate: {}
    serviceAccountName: tekton-bot
  timeouts:
    pipeline: 240h0m0s
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    lighthouse.jenkins-x.io/loadFileRefs: .*
  creationTimestamp: null
  name: pipelinerun-with-extra-params
spec:
  params:
    - name: pl-param-x
      value: "100"
    - name: pl-param-y
      value: "200"
    - name: pl-param-z
      value: "300"
  pipelineSpec:
    params:
      - name: pl-param-x
        type: string
      - name: pl-param-y
        type: string
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: add-params
        params:
          - name: a
            value: $(params.pl-param-x)
          - name: b
            value: $(params.pl-param-y)
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: The first integer
              name: a
              type: string
            - description: The second integer
              name: b
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              image: bash:latest
              name: sum
              script: |-
                #!/usr/bin/env bash
                echo -n $(( "$(inputs.params.a)" + "$(inputs.params.b)" ))
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    lighthouse.jenkins-x.io/appendStepsURL: https://gist.githubusercontent.com/jstrachan/1937a809fd4223f3588db32cbb3a034f/raw/3bb56dd20cae2795e0ec4788d79e18d9486da9d9/sample-git-clone-task.yaml
  creationTimestamp: null
  name: cheese
spec:
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: cheese
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              image: some/linter:1.2.3
              name: lint
              workingDir: /workspace/source
            - computeResources: {}
              image: gcr.io/jenkinsxio/builder-jx:2.1.142-761
              name: git-clone
              script: |
                #!/usr/bin/env bash
                export SUBDIR="source"
                echo "git cloning url: $REPO_URL version $PULL_PULL_SHA to dir: $SUBDIR"
                git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot}
                git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com}
                git config --global credential.helper store
                git clone $REPO_URL $SUBDIR
                cd $SUBDIR
                git checkout $PULL_PULL_SHA
                echo "checked out revision: $PULL_PULL_SHA to dir: $SUBDIR"
              workingDir: /workspace
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    lighthouse.jenkins-x.io/defaultParameters: "false"
  creationTimestamp: null
  name: cheese
spec:
  pipelineSpec:
    tasks:
      - name: cheese
        taskSpec:
          metadata: {}
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            volumeMounts:
              - mountPath: /home/jenkins
                name: workspace-volume
              - mountPath: /etc/podinfo
                name: podinfo
                readOnly: true
            workingDir: /workspace/source
          steps:
            - args:
                - -c
                - 'mkdir -p $HOME; git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot}; git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com}; git config --global credential.helper store; git clone $(params.REPO_URL) $(params.subdirectory); echo cloned url: $(params.REPO_URL) to dir: $(params.subdirectory); cd $(params.subdirectory); git checkout $(params.PULL_PULL_SHA); echo checked out revision: $(params.PULL_PULL_SHA) to dir: $(params.subdirectory)'
              command:
                - /bin/sh
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-jx:2.1.142-761
              name: git-clone
              workingDir: /workspace
            - args:
                - gitops
                - git
                - setup
                - --namespace
                - jx-git-operator
              command:
                - jx
              computeResources: {}
              image: gcr.io/jenkinsxio/jx-cli:latest
              name: git-setup
              workingDir: /workspace
            - args:
                - '[ -d /builder/home ] || mkdir -p /builder && ln -s /tekton/home /builder/home'
              command:
                - /bin/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-jx:2.1.142-761
              name: setup-builder-home
            - args:
                - step
                - git
                - merge
                - --verbose
                - --baseSHA
                - $(params.PULL_BASE_SHA)
                - --sha
                - $(params.PULL_PULL_SHA)
                - --baseBranch
                - $(params.PULL_BASE_REF)
              command:
                - jx
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-jx:2.1.142-761
              name: git-merge
            - args:
                - gitops
                - variables
              command:
                - jx
              computeResources: {}
              image: gcr.io/jenkinsxio/jx-cli:latest
              name: jx-variables
            - args:
                - jx step credential -s npm-token -k file -f /builder/home/.npmrc --optional=true
              command:
                - /bin/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-nodejs:2.1.150-769
              name: build-npmrc
            - args:
                - npm install
              command:
                - /bin/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-nodejs:2.1.150-769
              name: build-npm-install
            - args:
                - CI=true DISPLAY=:99 npm test
              command:
                - /bin/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-nodejs:2.1.150-769
              name: build-npm-test
            - args:
                - source .jx/variables.sh && cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json && /kaniko/executor $KANIKO_FLAGS --cache=true --cache-dir=/workspace --context=/workspace/source --dockerfile=/workspace/source/Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION --cache-repo=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/cache
              command:
                - /busybox/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/kaniko:0.0.5
              name: build-container-build
            - args:
                - source /workspace/source/.jx/variables.sh && jx preview create
              command:
                - /bin/bash
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/jx-cli:latest
              name: promote-jx-preview
          volumes:
            - emptyDir: {}
              name: workspace-volume
            - downwardAPI:
                items:
                  - fieldRef:
                      fieldPath: metadata.labels
                    path: labels
              name: podinfo
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: REPO_URL
      value: ""
    - name: PULL_PULL_SHA
      value: master
    - name: subdirectory
      value: source
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: master
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
  pipelineSpec:
    params:
      - description: git url to clone
        name: REPO_URL
        type: string
      - default: master
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - default: source
        description: subdirectory inside of /workspace to clone the git repo
        name: subdirectory
        type: string
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: 'the kind of job: postsubmit or presubmit'
        name: JOB_TYPE
        type: string
      - default: master
        description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
    tasks:
      - name: cheese
        params:
          - name: REPO_URL
            value: $(params.REPO_URL)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: subdirectory
            value: $(params.subdirectory)
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
        taskSpec:
          metadata: {}
          params:
            - description: git url to clone
              name: REPO_URL
              type: string
            - default: master
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - default: source
              description: subdirectory inside of /workspace to clone the git repo
              name: subdirectory
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: 'the kind of job: postsubmit or presubmit'
              name: JOB_TYPE
              type: string
            - default: master
              description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            volumeMounts:
              - mountPath: /home/jenkins
                name: workspace-volume
              - mountPath: /etc/podinfo
                name: podinfo
                readOnly: true
            workingDir: /workspace/source
          steps:
            - args:
                - -c
                - 'mkdir -p $HOME; git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot}; git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com}; git config --global credential.helper store; git clone $(params.REPO_URL) $(params.subdirectory); echo cloned url: $(params.REPO_URL) to dir: $(params.subdirectory); cd $(params.subdirectory); git checkout $(params.PULL_PULL_SHA); echo checked out revision: $(params.PULL_PULL_SHA) to dir: $(params.subdirectory)'
              command:
                - /bin/sh
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-jx:2.1.142-761
              name: git-clone
              workingDir: /workspace
            - args:
                - gitops
                - git
                - setup
                - --namespace
                - jx-git-operator
              command:
                - jx
              computeResources: {}
              image: gcr.io/jenkinsxio/jx-cli:latest
              name: git-setup
              workingDir: /workspace
            - args:
                - '[ -d /builder/home ] || mkdir -p /builder && ln -s /tekton/home /builder/home'
              command:
                - /bin/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-jx:2.1.142-761
              name: setup-builder-home
            - args:
                - step
                - git
                - merge
                - --verbose
                - --baseSHA
                - $(params.PULL_BASE_SHA)
                - --sha
                - $(params.PULL_PULL_SHA)
                - --baseBranch
                - $(params.PULL_BASE_REF)
              command:
                - jx
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-jx:2.1.142-761
              name: git-merge
            - args:
                - gitops
                - variables
              command:
                - jx
              computeResources: {}
              image: gcr.io/jenkinsxio/jx-cli:latest
              name: jx-variables
            - args:
                - jx step credential -s npm-token -k file -f /builder/home/.npmrc --optional=true
              command:
                - /bin/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-nodejs:2.1.150-769
              name: build-npmrc
            - args:
                - npm install
              command:
                - /bin/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-nodejs:2.1.150-769
              name: build-npm-install
            - args:
                - CI=true DISPLAY=:99 npm test
              command:
                - /bin/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-nodejs:2.1.150-769
              name: build-npm-test
            - args:
                - source .jx/variables.sh && cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json && /kaniko/executor $KANIKO_FLAGS --cache=true --cache-dir=/workspace --context=/workspace/source --dockerfile=/workspace/source/Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION --cache-repo=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/cache
              command:
                - /busybox/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/kaniko:0.0.5
              name: build-container-build
            - args:
                - source /workspace/source/.jx/variables.sh && jx preview create
              command:
                - /bin/bash
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/jx-cli:latest
              name: promote-jx-preview
          volumes:
            - emptyDir: {}
              name: workspace-volume
            - downwardAPI:
                items:
                  - fieldRef:
                      fieldPath: metadata.labels
                    path: labels
              name: podinfo
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    lighthouse.jenkins-x.io/prependStepsURL: https://gist.githubusercontent.com/jstrachan/1937a809fd4223f3588db32cbb3a034f/raw/3bb56dd20cae2795e0ec4788d79e18d9486da9d9/sample-git-clone-task.yaml
  creationTimestamp: null
  name: cheese
spec:
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: cheese
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              image: gcr.io/jenkinsxio/builder-jx:2.1.142-761
              name: git-clone
              script: |
                #!/usr/bin/env bash
                export SUBDIR="source"
                echo "git cloning url: $REPO_URL version $PULL_PULL_SHA to dir: $SUBDIR"
                git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot}
                git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com}
                git config --global credential.helper store
                git clone $REPO_URL $SUBDIR
                cd $SUBDIR
                git checkout $PULL_PULL_SHA
                echo "checked out revision: $PULL_PULL_SHA to dir: $SUBDIR"
              workingDir: /workspace
            - computeResources: {}
              image: some/linter:1.2.3
              name: lint
              workingDir: /workspace/source
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  pipelineSpec:
    params:
      - default: param-value
        name: PARAM
        type: string
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: cheese
        params:
          - name: PARAM
            value: $(params.PARAM)
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - default: param-value
              name: PARAM
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              image: ubuntu
              name: noshebang
              script: echo "no shebang"
            - computeResources: {}
              env:
                - name: FOO
                  value: foooooooo
              image: ubuntu
              name: bash
              script: |
                #!/usr/bin/env bash
                set -euxo pipefail
                echo "Hello from Bash!"
                echo FOO is ${FOO}
                echo substring is ${FOO:2:4}
                for i in {1..10}; do
                  echo line $i
                done
            - computeResources: {}
              image: ubuntu
              name: place-file
              script: |
                #!/usr/bin/env bash
                echo "echo Hello from script file" > /workspace/hello
                chmod +x /workspace/hello
            - computeResources: {}
              image: ubuntu
              name: run-file
              script: |
                #!/usr/bin/env bash
                /workspace/hello
            - computeResources: {}
              image: ubuntu
              name: contains-eof
              script: |
                #!/usr/bin/env bash
                cat > file << EOF
                this file has some contents
                EOF
                cat file
            - computeResources: {}
              image: node
              name: node
              script: |
                #!/usr/bin/env node
                console.log("Hello from Node!")
            - computeResources: {}
              image: python
              name: python
              script: |
                #!/usr/bin/env python3
                print("Hello from Python!")
            - computeResources: {}
              image: perl
              name: perl
              script: |
                #!/usr/bin/perl
                print "Hello from Perl!"
            - computeResources: {}
              image: python
              name: params-applied
              script: |
                #!/usr/bin/env python3
                v = '$(params.PARAM)'
                if v != 'param-value':
                  print('Param values not applied')
                  print('Got: ', v)
                  exit(1)
            - args:
                - hello
                - world
              computeResources: {}
              image: ubuntu
              name: args-allowed
              script: |-
                #!/usr/bin/env bash
                [[ $# == 2 ]]
                [[ $1 == "hello" ]]
                [[ $2 == "world" ]]
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: cheese
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            volumeMounts:
              - mountPath: /home/jenkins
                name: workspace-volume
              - mountPath: /etc/podinfo
                name: podinfo
                readOnly: true
            workingDir: /workspace/source
          steps:
            - args:
                - -c
                - mkdir -p $HOME; git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot}; git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com}; git config --global credential.helper store; git clone $REPO_URL
              command:
                - /bin/sh
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-jx:2.1.142-761
              name: git-clone
              workingDir: /workspace
            - args:
                - gitops
                - git
                - setup
                - --namespace
                - jx-git-operator
              command:
                - jx
              computeResources: {}
              image: gcr.io/jenkinsxio/jx-cli:latest
              name: git-setup
              workingDir: /workspace
            - args:
                - '[ -d /builder/home ] || mkdir -p /builder && ln -s /tekton/home /builder/home'
              command:
                - /bin/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-jx:2.1.142-761
              name: setup-builder-home
            - args:
                - step
                - git
                - merge
              command:
                - jx
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-jx:2.1.142-761
              name: git-merge
            - args:
                - gitops
                - variables
              command:
                - jx
              computeResources: {}
              image: gcr.io/jenkinsxio/jx-cli:latest
              name: jx-variables
            - args:
                - jx step credential -s npm-token -k file -f /builder/home/.npmrc --optional=true
              command:
                - /bin/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-nodejs:2.1.150-769
              name: build-npmrc
            - args:
                - npm install
              command:
                - /bin/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-nodejs:2.1.150-769
              name: build-npm-install
            - args:
                - CI=true DISPLAY=:99 npm test
              command:
                - /bin/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-nodejs:2.1.150-769
              name: build-npm-test
            - args:
                - source .jx/variables.sh && cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json && /kaniko/executor $KANIKO_FLAGS --cache=true --cache-dir=/workspace --context=/workspace/source --dockerfile=/workspace/source/Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION --cache-repo=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/cache
              command:
                - /busybox/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/kaniko:0.0.5
              name: build-container-build
            - args:
                - source /workspace/source/.jx/variables.sh && jx preview create
              command:
                - /bin/bash
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/jx-cli:latest
              name: promote-jx-preview
          volumes:
            - emptyDir: {}
              name: workspace-volume
            - downwardAPI:
                items:
                  - fieldRef:
                      fieldPath: metadata.labels
                    path: labels
              name: podinfo
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.19.0
              name: git-clone
              script: |
                #!/bin/sh
                export SUBDIR="source"
                echo "git cloning url: $REPO_URL version $PULL_PULL_SHA to dir: $SUBDIR"
                git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot}
                git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com}
                git config --global credential.helper store
                git clone $REPO_URL $SUBDIR
                cd $SUBDIR
                git checkout $PULL_PULL_SHA
                echo "checked out revision: $PULL_PULL_SHA to dir: $SUBDIR"
              workingDir: /workspace
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.62
              name: git-merge
              script: |
                #!/usr/bin/env sh
                jx gitops git merge variables
              workingDir: /workspace/source
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm test
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: params
spec:
  params:
    - name: FOO
      value: BAR-CATALOG
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - default: BAR-CATALOG
        name: FOO
        type: string
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: test-params
        params:
          - name: FOO
            value: $(params.FOO)
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - default: BAR-CATALOG
              name: FOO
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: FOO
                value: $(params.FOO)
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              image: gcr.io/cloud-builders/kubectl@sha256:8ab94be8b2b4f3d117f02d868b39540fddd225447abf4014f7ba4765cb39f753
              name: test-echo
              script: |-
                #!/usr/bin/env bash
                echo "FOO: $(params.FOO)"
  taskRunTemplate:
    podTemplate: {}
    serviceAccountName: tekton-bot
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: params
spec:
  params:
    - name: FOO
      value: BAR-CATALOG
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - default: BAR-CATALOG
        name: FOO
        type: string
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: test-params
        params:
          - name: FOO
            value: $(params.FOO)
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - default: BAR-CATALOG
              name: FOO
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
              - name: FOO
                value: $(params.FOO)
          steps:
            - computeResources: {}
              image: gcr.io/cloud-builders/kubectl@sha256:8ab94be8b2b4f3d117f02d868b39540fddd225447abf4014f7ba4765cb39f753
              name: test-echo
              script: |-
                #!/usr/bin/env bash
                echo "FOO: $(params.FOO)"
  taskRunTemplate:
    podTemplate: {}
    serviceAccountName: tekton-bot
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              env:
                - name: FOO
                  value: foo
              image: common-image
              name: common-build
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              env:
                - name: FOO
                  value: one
              image: common-image
              name: common-build
  taskRunTemplate: {}
  timeouts:
    pipeline: 240h0m0s
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: node:12-slim
              name: my-first-step
              script: |
                #!/bin/sh
                npm first thing
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm test
            - computeResources: {}
              image: node:12-slim
              name: my-pre-build-container
              script: |
                #!/bin/sh
                npm pre build container
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
            - computeResources: {}
              image: node:12-slim
              name: my-final-step
              script: |
                #!/bin/sh
                npm final thing
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: node:12-slim
              name: my-first-step
              script: |
                #!/bin/sh
                npm first thing
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm test
            - computeResources: {}
              image: node:12-slim
              name: my-pre-build-container
              script: |
                #!/bin/sh
                npm pre build container
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
            - computeResources: {}
              image: node:12-slim
              name: my-final-step
              script: |
                #!/bin/sh
                npm final thing
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: url
      value: ""
    - name: revision
      value: ""
    - name: refspec
      value: ""
    - name: submodules
      value: "true"
    - name: depth
      value: "1"
    - name: sslVerify
      value: "true"
    - name: subdirectory
      value: ""
    - name: deleteExisting
      value: "true"
    - name: httpProxy
      value: ""
    - name: httpsProxy
      value: ""
    - name: noProxy
      value: ""
    - name: verbose
      value: "true"
    - name: gitInitImage
      value: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.18.1
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: git url to clone
        name: url
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: revision
        type: string
      - default: ""
        description: (optional) git refspec to fetch before checking out revision
        name: refspec
        type: string
      - default: "true"
        description: defines if the resource should initialize and fetch the submodules
        name: submodules
        type: string
      - default: "1"
        description: performs a shallow clone where only the most recent commit(s) will be fetched
        name: depth
        type: string
      - default: "true"
        description: defines if http.sslVerify should be set to true or false in the global git config
        name: sslVerify
        type: string
      - default: ""
        description: subdirectory inside the "output" workspace to clone the git repo into
        name: subdirectory
        type: string
      - default: "true"
        description: clean out the contents of the repo's destination directory (if it already exists) before trying to clone the repo there
        name: deleteExisting
        type: string
      - default: ""
        description: git HTTP proxy server for non-SSL requests
        name: httpProxy
        type: string
      - default: ""
        description: git HTTPS proxy server for SSL requests
        name: httpsProxy
        type: string
      - default: ""
        description: git no proxy - opt out of proxying HTTP/HTTPS requests
        name: noProxy
        type: string
      - default: "true"
        description: log the commands used during execution
        name: verbose
        type: string
      - default: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.18.1
        description: the image used where the git-init binary is
        name: gitInitImage
        type: string
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    results:
      - description: The precise commit SHA that was fetched by this Task
        name: commit
        value: $(tasks.from-build-pack.results.commit)
      - description: The precise URL that was fetched by this Task
        name: url
        value: $(tasks.from-build-pack.results.url)
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
            - description: git url to clone
              name: url
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: revision
              type: string
            - default: ""
              description: (optional) git refspec to fetch before checking out revision
              name: refspec
              type: string
            - default: "true"
              description: defines if the resource should initialize and fetch the submodules
              name: submodules
              type: string
            - default: "1"
              description: performs a shallow clone where only the most recent commit(s) will be fetched
              name: depth
              type: string
            - default: "true"
              description: defines if http.sslVerify should be set to true or false in the global git config
              name: sslVerify
              type: string
            - default: ""
              description: subdirectory inside the "output" workspace to clone the git repo into
              name: subdirectory
              type: string
            - default: "true"
              description: clean out the contents of the repo's destination directory (if it already exists) before trying to clone the repo there
              name: deleteExisting
              type: string
            - default: ""
              description: git HTTP proxy server for non-SSL requests
              name: httpProxy
              type: string
            - default: ""
              description: git HTTPS proxy server for SSL requests
              name: httpsProxy
              type: string
            - default: ""
              description: git no proxy - opt out of proxying HTTP/HTTPS requests
              name: noProxy
              type: string
            - default: "true"
              description: log the commands used during execution
              name: verbose
              type: string
            - default: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.18.1
              description: the image used where the git-init binary is
              name: gitInitImage
              type: string
          results:
            - description: The precise commit SHA that was fetched by this Task
              name: commit
            - description: The precise URL that was fetched by this Task
              name: url
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            volumeMounts:
              - mountPath: /tekton/home/npm
                name: npmrc
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              env:
                - name: PARAM_URL
                  value: $(params.url)
                - name: PARAM_REVISION
                  value: $(params.revision)
                - name: PARAM_REFSPEC
                  value: $(params.refspec)
                - name: PARAM_SUBMODULES
                  value: $(params.submodules)
                - name: PARAM_DEPTH
                  value: $(params.depth)
                - name: PARAM_SSL_VERIFY
                  value: $(params.sslVerify)
                - name: PARAM_SUBDIRECTORY
                  value: $(params.subdirectory)
                - name: PARAM_DELETE_EXISTING
                  value: $(params.deleteExisting)
                - name: PARAM_HTTP_PROXY
                  value: $(params.httpProxy)
                - name: PARAM_HTTPS_PROXY
                  value: $(params.httpsProxy)
                - name: PARAM_NO_PROXY
                  value: $(params.noProxy)
                - name: PARAM_VERBOSE
                  value: $(params.verbose)
                - name: WORKSPACE_OUTPUT_PATH
                  value: $(workspaces.output.path)
              image: $(params.gitInitImage)
              name: clone
              script: |
                #!/bin/sh
                set -eu -o pipefail

                if [[ "${PARAM_VERBOSE}" == "true" ]] ; then
                  set -x
                fi

                CHECKOUT_DIR="${WORKSPACE_OUTPUT_PATH}/${PARAM_SUBDIRECTORY}"

                cleandir() {
                  # Delete any existing contents of the repo directory if it exists.
                  #
                  # We don't just "rm -rf $CHECKOUT_DIR" because $CHECKOUT_DIR might be "/"
                  # or the root of a mounted volume.
                  if [[ -d "$CHECKOUT_DIR" ]] ; then
                    # Delete non-hidden files and directories
                    rm -rf "$CHECKOUT_DIR"/*
                    # Delete files and directories starting with . but excluding ..
                    rm -rf "$CHECKOUT_DIR"/.[!.]*
                    # Delete files and directories starting with .. plus any other character
                    rm -rf "$CHECKOUT_DIR"/..?*
                  fi
                }

                if [[ "${PARAM_DELETE_EXISTING}" == "true" ]] ; then
                  cleandir
                fi

                test -z "${PARAM_HTTP_PROXY}" || export HTTP_PROXY="${PARAM_HTTP_PROXY}"
                test -z "${PARAM_HTTPS_PROXY}" || export HTTPS_PROXY="${PARAM_HTTPS_PROXY}"
                test -z "${PARAM_NO_PROXY}" || export NO_PROXY="${PARAM_NO_PROXY}"

                /ko-app/git-init \
                  -url "${PARAM_URL}" \
                  -revision "${PARAM_REVISION}" \
                  -refspec "${PARAM_REFSPEC}" \
                  -path "$CHECKOUT_DIR" \
                  -sslVerify="${PARAM_SSL_VERIFY}" \
                  -submodules="${PARAM_SUBMODULES}" \
                  -depth "${PARAM_DEPTH}"
                cd "$CHECKOUT_DIR"
                RESULT_SHA="$(git rev-parse HEAD)"
                EXIT_CODE="$?"
                if [ "$EXIT_CODE" != 0 ] ; then
                  exit $EXIT_CODE
                fi
                # ensure we don't add a trailing newline to the result
                echo -n "$RESULT_SHA" > $(results.commit.path)
                echo -n "${PARAM_URL}" > $(results.url.path)
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm test
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
          volumes:
            - name: npmrc
              secret:
                optional: true
                secretName: npmrc
          workspaces:
            - description: The git repo will be cloned onto the volume backing this workspace
              name: output
        workspaces:
          - name: output
            workspace: output
    workspaces:
      - description: The git repo will be cloned onto the volume backing this workspace
        name: output
  taskRunTemplate: {}
  timeouts:
    pipeline: 24h0m0s
  workspaces:
    - emptyDir: {}
      name: output
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            volumeMounts:
              - mountPath: /tekton/home/npm
                name: npmrc
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm test
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
          volumes:
            - name: npmrc
              secret:
                optional: true
                secretName: npmrc
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            volumeMounts:
              - mountPath: /tekton/home/npm
                name: npmrc
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm test
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
          volumes:
            - name: npmrc
              secret:
                optional: true
                secretName: npmrc
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          sidecars:
            - computeResources: {}
              env:
                - name: START_XVFB
                  value: "false"
              image: selenium/standalone-chrome
              name: selenium
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            volumeMounts:
              - mountPath: /tekton/home/npm
                name: npmrc
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm test
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
          volumes:
            - name: npmrc
              secret:
                optional: true
                secretName: npmrc
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            volumeMounts:
              - mountPath: /tekton/home/npm
                name: npmrc
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm test
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              env:
                - name: IMAGE
                  value: gcr.io/myproject/myimage
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build-cheese
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              env:
                - name: IMAGE
                  value: gcr.io/myproject/wine
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build-wine
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
          volumes:
            - name: npmrc
              secret:
                optional: true
                secretName: npmrc
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              env:
                - name: MY_NEW_ENV_VAR
                  value: this-is-a-new-value
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              envFrom:
                - configMapRef:
                    name: myconfigmap
                    optional: true
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/usr/bin/env sh
                echo "this is my custom script"
              workingDir: /workspace/mynewdir
            - args:
                - -c
                - echo this is a new custom command
              command:
                - bash
              computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
              volumeMounts:
                - mountPath: /foo/bar
                  name: my-new-volume
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 600m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            volumeMounts:
              - mountPath: /tekton/home/npm-something-else
                name: npmrc
            workingDir: /workspace/my-source
          steps:
            - computeResources: {}
              image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.19.0
              name: git-clone
              script: |
                #!/bin/sh
                export SUBDIR="source"
                echo "git cloning url: $REPO_URL version $PULL_PULL_SHA to dir: $SUBDIR"
                git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot}
                git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com}
                git config --global credential.helper store
                git clone $REPO_URL $SUBDIR
                cd $SUBDIR
                git checkout $PULL_PULL_SHA
                echo "checked out revision: $PULL_PULL_SHA to dir: $SUBDIR"
              workingDir: /workspace
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.62
              name: git-merge
              script: |
                #!/usr/bin/env sh
                jx gitops git merge variables
              workingDir: /workspace/source
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm test
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
            - command:
                - jx-updatebot
                - pr
              computeResources: {}
              image: ghcr.io/jenkins-x/jx-updatebot:0.0.82
              name: promote-release
          volumes:
            - name: npmrc
              secret:
                optional: true
                secretName: npmrc
  taskRunTemplate: {}
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            volumeMounts:
              - mountPath: /tekton/home/npm
                name: npmrc
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm test
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
            - computeResources: {}
              image: ghcr.io/jenkins-x/jx-updatebot:0.0.82
              name: promote-release
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx updatebot argo promote --target-git-url https://github.com/myorg/my-staging-repo
          volumes:
            - name: npmrc
              secret:
                optional: true
                secretName: npmrc
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:latest
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm test
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          sidecars:
            - computeResources: {}
              env:
                - name: START_XVFB
                  value: "false"
              image: selenium/standalone-chrome
              name: selenium
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            volumeMounts:
              - mountPath: /tekton/home/npm
                name: npmrc
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm test
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
          volumes:
            - name: npmrc
              secret:
                optional: true
                secretName: npmrc
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: pullrequest
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          sidecars:
            - computeResources: {}
              image: xyz/json-server:0.1.15
              name: json-server
              script: |
                #!/bin/ash
                while [ ! -f /workspace/source/JsonServer/mocks.json ] ; do
                  echo "Waiting for mocks.json"
                  sleep 1
                done
                json-server --watch /workspace/source/JsonServer/mocks.json
              workspaces:
                - mountPath: ""
                  name: source
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            volumeMounts:
              - mountPath: /tekton/home/npm
                name: npmrc
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.19.0
              name: git-clone
              script: |
                #!/bin/sh
                export SUBDIR="source"
                echo "git cloning url: $REPO_URL version $PULL_BASE_SHA to dir: $SUBDIR"
                git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot}
                git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com}
                git config --global credential.helper store
                git clone $REPO_URL $SUBDIR
                cd $SUBDIR
                git checkout $PULL_BASE_SHA
                echo "checked out revision: $PULL_BASE_SHA to dir: $SUBDIR"
              workingDir: /workspace
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:14-slim
              name: ""
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                yarn install
                CI=true DISPLAY=:99 yarn run test:unit
          volumes:
            - name: npmrc
              secret:
                optional: true
                secretName: npmrc
          workspaces:
            - description: The git repo will be cloned onto the volume backing this workspace
              mountPath: /workspace
              name: output
            - name: source
        workspaces:
          - name: source
            workspace: source
          - name: output
            workspace: output
    workspaces:
      - name: source
      - description: The git repo will be cloned onto the volume backing this workspace
        name: output
  taskRunTemplate:
    podTemplate: {}
    serviceAccountName: tekton-bot
  timeouts:
    pipeline: 12h0m0s
  workspaces:
    - emptyDir: {}
      name: source
    - emptyDir: {}
      name: output
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: release
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: _JAVA_OPTIONS
                value: -XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx192m
              - name: MAVEN_OPTS
                value: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=25 -Dmaven.wagon.http.retryHandler.count=3
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            volumeMounts:
              - mountPath: /root/.m2/
                name: maven-settings
              - mountPath: /root/.gnupg
                name: release-gpg
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.19.0
              name: git-clone
              script: |
                #!/bin/sh
                export SUBDIR="source"
                echo "git cloning url: $REPO_URL version $PULL_BASE_SHA to dir: $SUBDIR"
                git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot}
                git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com}
                git config --global credential.helper store
                git clone $REPO_URL $SUBDIR
                cd $SUBDIR
                git checkout $PULL_BASE_SHA
                echo "checked out revision: $PULL_BASE_SHA to dir: $SUBDIR"
              workingDir: /workspace
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-release-version:2.2.5
              name: next-version
              script: |
                #!/usr/bin/env sh
                jx-release-version > VERSION
            - computeResources: {}
              image: ghcr.io/jenkins-x/jx-boot:3.1.335
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: maven:3.6-openjdk-11
              name: build-mvn-deploy
              script: |
                #!/usr/bin/env bash
                source .jx/variables.sh

                # modify the pom.xml
                echo "upgrading the pom to version $VERSION"
                mvn versions:set -DnewVersion=$VERSION

                mvn --no-transfer-progress clean deploy
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-registry:0.0.11
              name: check-registry
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$PUSH_CONTAINER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-changelog:0.0.34
              name: promote-changelog
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh

                if [ -d "charts/$REPO_NAME" ]; then
                sed -i -e "s/^version:.*/version: $VERSION/" ./charts/$REPO_NAME/Chart.yaml
                sed -i -e "s/repository:.*/repository: $DOCKER_REGISTRY\/$DOCKER_REGISTRY_ORG\/$APP_NAME/" ./charts/$REPO_NAME/values.yaml
                sed -i -e "s/tag:.*/tag: $VERSION/" ./charts/$REPO_NAME/values.yaml;
                else echo no charts; fi

                jx changelog create --version v${VERSION}

                git add * || true
                git commit -a -m "chore: release $VERSION" --allow-empty
                git tag -fa v$VERSION -m "Release version $VERSION"
                git push --force origin v$VERSION
            - computeResources: {}
              image: ghcr.io/jenkins-x/jx-boot:3.1.335
              name: promote-helm-release
              script: |
                #!/usr/bin/env sh
                jx gitops helm release
            - computeResources: {}
              image: ghcr.io/jenkins-x/jx-promote:0.0.243
              name: promote-jx-promote
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx promote -b --all --timeout 1h --no-poll
          volumes:
            - name: maven-settings
              secret:
                secretName: jenkins-maven-settings
            - name: release-gpg
              secret:
                optional: true
                secretName: jenkins-release-gpg
          workspaces:
            - description: The git repo will be cloned onto the volume backing this workspace
              mountPath: /workspace
              name: output
        workspaces:
          - name: output
            workspace: output
    workspaces:
      - description: The git repo will be cloned onto the volume backing this workspace
        name: output
  taskRunTemplate:
    podTemplate: {}
    serviceAccountName: tekton-bot
  timeouts:
    pipeline: 240h0m0s
  workspaces:
    - emptyDir: {}
      name: output
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  pipelineSpec:
    finally:
      - name: lint-pr-comment
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              image: ghcr.io/jenkins-x/jx-gitops:0.3.1
              name: lint-pr-comment
              script: |
                #!/bin/sh
                set -x
                . .jx/variables.sh
                jx gitops pr comment -c "$(cat issues.md)"
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              env:
                - name: FOO
                  value: one
              image: common-image
              name: common-build
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    finally:
      - name: from-build-pack-finally
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              env:
                - name: FOO
                  value: finally
              image: common-image
              name: common-build
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              env:
                - name: FOO
                  value: foo
              image: common-image
              name: common-build
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    lighthouse.jenkins-x.io/loadFileRefs: .*
  creationTimestamp: null
  name: demo-pipeline
spec:
  pipelineSpec:
    params:
      - default: gcr.io/christiewilson-catfactory
        name: image-registry
        type: string
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: fetch-from-git
        params:
          - name: url
            value: https://github.com/GoogleContainerTools/skaffold
          - name: revision
            value: v0.32.0
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: git url to clone
              name: url
              type: string
            - default: master
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: revision
              type: string
            - default: "true"
              description: defines if the resource should initialize and fetch the submodules
              name: submodules
              type: string
            - default: "1"
              description: performs a shallow clone where only the most recent commit(s) will be fetched
              name: depth
              type: string
            - default: "true"
              description: defines if http.sslVerify should be set to true or false in the global git config
              name: sslVerify
              type: string
            - default: ""
              description: subdirectory inside the "output" workspace to clone the git repo into
              name: subdirectory
              type: string
            - default: "false"
              description: clean out the contents of the repo's destination directory (if it already exists) before trying to clone the repo there
              name: deleteExisting
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          results:
            - description: The precise commit SHA that was fetched by this Task
              name: commit
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              image: ko://github.com/tektoncd/pipeline/cmd/git-init
              name: clone
              script: |-
                CHECKOUT_DIR="$(workspaces.output.path)/$(params.subdirectory)"
                cleandir() {
                  # Delete any existing contents of the repo directory if it exists.
                  #
                  # We don't just "rm -rf $CHECKOUT_DIR" because $CHECKOUT_DIR might be "/"
                  # or the root of a mounted volume.
                  if [[ -d "$CHECKOUT_DIR" ]] ; then
                    # Delete non-hidden files and directories
                    rm -rf "$CHECKOUT_DIR"/*
                    # Delete files and directories starting with . but excluding ..
                    rm -rf "$CHECKOUT_DIR"/.[!.]*
                    # Delete files and directories starting with .. plus any other character
                    rm -rf "$CHECKOUT_DIR"/..?*
                  fi
                }
                if [[ "$(params.deleteExisting)" == "true" ]] ; then
                  cleandir
                fi
                /ko-app/git-init \
                  -url "$(params.url)" \
                  -revision "$(params.revision)" \
                  -path "$CHECKOUT_DIR" \
                  -sslVerify="$(params.sslVerify)" \
                  -submodules="$(params.submodules)" \
                  -depth="$(params.depth)"
                cd "$CHECKOUT_DIR"
                RESULT_SHA="$(git rev-parse HEAD | tr -d '\n')"
                EXIT_CODE="$?"
                if [ "$EXIT_CODE" != 0 ]
                then
                  exit $EXIT_CODE
                fi
                # Make sure we don't add a trailing newline to the result!
                echo -n "$RESULT_SHA" > $(results.commit.path)
          workspaces:
            - description: The git repo will be cloned onto the volume backing this workspace
              name: output
        workspaces:
          - name: output
            workspace: git-source
      - name: skaffold-unit-tests
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        runAfter:
          - fetch-from-git
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              env:
                - name: GOPATH
                  value: /workspace/go
              image: golang
              name: run-tests
              script: |-
                # The intention behind this example Task is to run unit test, however we
                # currently do nothing to ensure that a unit test issue doesn't cause this example
                # to fail unnecessarily. In the future we could re-introduce the unit tests (since
                # we are now pinning the version of Skaffold we pull) or use Tekton Pipelines unit tests.
                echo "pass"
              workingDir: $(workspaces.source.path)
          workspaces:
            - mountPath: /workspace/source/go/src/github.com/GoogleContainerTools/skaffold
              name: source
        workspaces:
          - name: source
            workspace: git-source
      - name: build-skaffold-web
        params:
          - name: IMAGE
            value: $(params.image-registry)/leeroy-web
          - name: CONTEXT
            value: examples/microservices/leeroy-web
          - name: DOCKERFILE
            value: $(workspaces.source.path)/examples/microservices/leeroy-web/Dockerfile
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        runAfter:
          - skaffold-unit-tests
        taskSpec:
          metadata: {}
          params:
            - description: Name (reference) of the image to build.
              name: IMAGE
              type: string
            - default: ./Dockerfile
              description: Path to the Dockerfile to build.
              name: DOCKERFILE
              type: string
            - default: ./
              description: The build context used by Kaniko.
              name: CONTEXT
              type: string
            - default: ""
              name: EXTRA_ARGS
              type: string
            - default: gcr.io/kaniko-project/executor:latest
              description: The image on which builds will run
              name: BUILDER_IMAGE
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          results:
            - description: Digest of the image just built.
              name: IMAGE_DIGEST
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - command:
                - /kaniko/executor
                - $(params.EXTRA_ARGS)
                - --dockerfile=$(params.DOCKERFILE)
                - --context=$(workspaces.source.path)/$(params.CONTEXT)
                - --destination=$(params.IMAGE)
                - --oci-layout-path=$(workspaces.source.path)/$(params.CONTEXT)/image-digest
              computeResources: {}
              env:
                - name: DOCKER_CONFIG
                  value: /tekton/home/.docker
              image: $(params.BUILDER_IMAGE)
              name: build-and-push
              securityContext:
                runAsUser: 0
              workingDir: $(workspaces.source.path)
            - args:
                - -images=[{"name":"$(params.IMAGE)","type":"image","url":"$(params.IMAGE)","digest":"","OutputImageDir":"$(workspaces.source.path)/$(params.CONTEXT)/image-digest"}]
                - -terminationMessagePath=$(params.CONTEXT)/image-digested
              command:
                - /ko-app/imagedigestexporter
              computeResources: {}
              image: ko://github.com/tektoncd/pipeline/cmd/imagedigestexporter
              name: write-digest
              securityContext:
                runAsUser: 0
              workingDir: $(workspaces.source.path)
            - computeResources: {}
              image: stedolan/jq
              name: digest-to-results
              script: cat $(params.CONTEXT)/image-digested | jq '.[0].value' -rj | tee /tekton/results/IMAGE_DIGEST
              workingDir: $(workspaces.source.path)
          workspaces:
            - name: source
        workspaces:
          - name: source
            workspace: git-source
      - name: build-skaffold-app
        params:
          - name: IMAGE
            value: $(params.image-registry)/leeroy-app
          - name: CONTEXT
            value: examples/microservices/leeroy-app
          - name: DOCKERFILE
            value: $(workspaces.source.path)/examples/microservices/leeroy-app/Dockerfile
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        runAfter:
          - skaffold-unit-tests
        taskSpec:
          metadata: {}
          params:
            - description: Name (reference) of the image to build.
              name: IMAGE
              type: string
            - default: ./Dockerfile
              description: Path to the Dockerfile to build.
              name: DOCKERFILE
              type: string
            - default: ./
              description: The build context used by Kaniko.
              name: CONTEXT
              type: string
            - default: ""
              name: EXTRA_ARGS
              type: string
            - default: gcr.io/kaniko-project/executor:latest
              description: The image on which builds will run
              name: BUILDER_IMAGE
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          results:
            - description: Digest of the image just built.
              name: IMAGE_DIGEST
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - command:
                - /kaniko/executor
                - $(params.EXTRA_ARGS)
                - --dockerfile=$(params.DOCKERFILE)
                - --context=$(workspaces.source.path)/$(params.CONTEXT)
                - --destination=$(params.IMAGE)
                - --oci-layout-path=$(workspaces.source.path)/$(params.CONTEXT)/image-digest
              computeResources: {}
              env:
                - name: DOCKER_CONFIG
                  value: /tekton/home/.docker
              image: $(params.BUILDER_IMAGE)
              name: build-and-push
              securityContext:
                runAsUser: 0
              workingDir: $(workspaces.source.path)
            - args:
                - -images=[{"name":"$(params.IMAGE)","type":"image","url":"$(params.IMAGE)","digest":"","OutputImageDir":"$(workspaces.source.path)/$(params.CONTEXT)/image-digest"}]
                - -terminationMessagePath=$(params.CONTEXT)/image-digested
              command:
                - /ko-app/imagedigestexporter
              computeResources: {}
              image: ko://github.com/tektoncd/pipeline/cmd/imagedigestexporter
              name: write-digest
              securityContext:
                runAsUser: 0
              workingDir: $(workspaces.source.path)
            - computeResources: {}
              image: stedolan/jq
              name: digest-to-results
              script: cat $(params.CONTEXT)/image-digested | jq '.[0].value' -rj | tee /tekton/results/IMAGE_DIGEST
              workingDir: $(workspaces.source.path)
          workspaces:
            - name: source
        workspaces:
          - name: source
            workspace: git-source
      - name: deploy-app
        params:
          - name: imageURL
            value: $(params.image-registry)/leeroy-app@$(tasks.build-skaffold-app.results.IMAGE_DIGEST)
          - name: path
            value: $(workspaces.source.path)/examples/microservices/leeroy-app/kubernetes/deployment.yaml
          - name: yqArg
            value: -d1
          - name: yamlPathToImage
            value: spec.template.spec.containers[0].image
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: Path to the manifest to apply
              name: path
              type: string
            - description: Okay this is a hack, but I didn't feel right hard-coding `-d1` down below
              name: yqArg
              type: string
            - description: The path to the image to replace in the yaml manifest (arg to yq)
              name: yamlPathToImage
              type: string
            - description: The URL of the image to deploy
              name: imageURL
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - args:
                - w
                - -i
                - $(params.yqArg)
                - $(params.path)
                - $(params.yamlPathToImage)
                - $(params.imageURL)
              command:
                - yq
              computeResources: {}
              image: mikefarah/yq
              name: replace-image
            - args:
                - apply
                - -f
                - $(params.path)
              command:
                - kubectl
              computeResources: {}
              image: lachlanevenson/k8s-kubectl
              name: run-kubectl
          workspaces:
            - name: source
        workspaces:
          - name: source
            workspace: git-source
      - name: deploy-web
        params:
          - name: imageURL
            value: $(params.image-registry)/leeroy-web@$(tasks.build-skaffold-web.results.IMAGE_DIGEST)
          - name: path
            value: $(workspaces.source.path)/examples/microservices/leeroy-web/kubernetes/deployment.yaml
          - name: yqArg
            value: -d1
          - name: yamlPathToImage
            value: spec.template.spec.containers[0].image
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: Path to the manifest to apply
              name: path
              type: string
            - description: Okay this is a hack, but I didn't feel right hard-coding `-d1` down below
              name: yqArg
              type: string
            - description: The path to the image to replace in the yaml manifest (arg to yq)
              name: yamlPathToImage
              type: string
            - description: The URL of the image to deploy
              name: imageURL
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - args:
                - w
                - -i
                - $(params.yqArg)
                - $(params.path)
                - $(params.yamlPathToImage)
                - $(params.imageURL)
              command:
                - yq
              computeResources: {}
              image: mikefarah/yq
              name: replace-image
            - args:
                - apply
                - -f
                - $(params.path)
              command:
                - kubectl
              computeResources: {}
              image: lachlanevenson/k8s-kubectl
              name: run-kubectl
          workspaces:
            - name: source
        workspaces:
          - name: source
            workspace: git-source
    workspaces:
      - name: git-source
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    lighthouse.jenkins-x.io/loadFileRefs: .*
  creationTimestamp: null
  name: demo-pipeline
spec:
  pipelineSpec:
    params:
      - default: gcr.io/christiewilson-catfactory
        name: image-registry
        type: string
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: fetch-from-git
        params:
          - name: url
            value: https://github.com/GoogleContainerTools/skaffold
          - name: revision
            value: v0.32.0
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: git url to clone
              name: url
              type: string
            - default: master
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: revision
              type: string
            - default: "true"
              description: defines if the resource should initialize and fetch the submodules
              name: submodules
              type: string
            - default: "1"
              description: performs a shallow clone where only the most recent commit(s) will be fetched
              name: depth
              type: string
            - default: "true"
              description: defines if http.sslVerify should be set to true or false in the global git config
              name: sslVerify
              type: string
            - default: ""
              description: subdirectory inside the "output" workspace to clone the git repo into
              name: subdirectory
              type: string
            - default: "false"
              description: clean out the contents of the repo's destination directory (if it already exists) before trying to clone the repo there
              name: deleteExisting
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          results:
            - description: The precise commit SHA that was fetched by this Task
              name: commit
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              image: ko://github.com/tektoncd/pipeline/cmd/git-init
              name: clone
              script: |-
                CHECKOUT_DIR="$(workspaces.output.path)/$(params.subdirectory)"
                cleandir() {
                  # Delete any existing contents of the repo directory if it exists.
                  #
                  # We don't just "rm -rf $CHECKOUT_DIR" because $CHECKOUT_DIR might be "/"
                  # or the root of a mounted volume.
                  if [[ -d "$CHECKOUT_DIR" ]] ; then
                    # Delete non-hidden files and directories
                    rm -rf "$CHECKOUT_DIR"/*
                    # Delete files and directories starting with . but excluding ..
                    rm -rf "$CHECKOUT_DIR"/.[!.]*
                    # Delete files and directories starting with .. plus any other character
                    rm -rf "$CHECKOUT_DIR"/..?*
                  fi
                }
                if [[ "$(params.deleteExisting)" == "true" ]] ; then
                  cleandir
                fi
                /ko-app/git-init \
                  -url "$(params.url)" \
                  -revision "$(params.revision)" \
                  -path "$CHECKOUT_DIR" \
                  -sslVerify="$(params.sslVerify)" \
                  -submodules="$(params.submodules)" \
                  -depth="$(params.depth)"
                cd "$CHECKOUT_DIR"
                RESULT_SHA="$(git rev-parse HEAD | tr -d '\n')"
                EXIT_CODE="$?"
                if [ "$EXIT_CODE" != 0 ]
                then
                  exit $EXIT_CODE
                fi
                # Make sure we don't add a trailing newline to the result!
                echo -n "$RESULT_SHA" > $(results.commit.path)
          workspaces:
            - description: The git repo will be cloned onto the volume backing this workspace
              name: output
        workspaces:
          - name: output
            workspace: git-source
      - name: skaffold-unit-tests
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        runAfter:
          - fetch-from-git
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              env:
                - name: GOPATH
                  value: /workspace/go
              image: golang
              name: run-tests
              script: |-
                # The intention behind this example Task is to run unit test, however we
                # currently do nothing to ensure that a unit test issue doesn't cause this example
                # to fail unnecessarily. In the future we could re-introduce the unit tests (since
                # we are now pinning the version of Skaffold we pull) or use Tekton Pipelines unit tests.
                echo "pass"
              workingDir: $(workspaces.source.path)
          workspaces:
            - mountPath: /workspace/source/go/src/github.com/GoogleContainerTools/skaffold
              name: source
        workspaces:
          - name: source
            workspace: git-source
      - name: build-skaffold-web
        params:
          - name: IMAGE
            value: $(params.image-registry)/leeroy-web
          - name: CONTEXT
            value: examples/microservices/leeroy-web
          - name: DOCKERFILE
            value: $(workspaces.source.path)/examples/microservices/leeroy-web/Dockerfile
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        runAfter:
          - skaffold-unit-tests
        taskSpec:
          metadata: {}
          params:
            - description: Name (reference) of the image to build.
              name: IMAGE
              type: string
            - default: ./Dockerfile
              description: Path to the Dockerfile to build.
              name: DOCKERFILE
              type: string
            - default: ./
              description: The build context used by Kaniko.
              name: CONTEXT
              type: string
            - default: ""
              name: EXTRA_ARGS
              type: string
            - default: gcr.io/kaniko-project/executor:latest
              description: The image on which builds will run
              name: BUILDER_IMAGE
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          results:
            - description: Digest of the image just built.
              name: IMAGE_DIGEST
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - command:
                - /kaniko/executor
                - $(params.EXTRA_ARGS)
                - --dockerfile=$(params.DOCKERFILE)
                - --context=$(workspaces.source.path)/$(params.CONTEXT)
                - --destination=$(params.IMAGE)
                - --oci-layout-path=$(workspaces.source.path)/$(params.CONTEXT)/image-digest
              computeResources: {}
              env:
                - name: DOCKER_CONFIG
                  value: /tekton/home/.docker
              image: $(params.BUILDER_IMAGE)
              name: build-and-push
              securityContext:
                runAsUser: 0
              workingDir: $(workspaces.source.path)
            - args:
                - -images=[{"name":"$(params.IMAGE)","type":"image","url":"$(params.IMAGE)","digest":"","OutputImageDir":"$(workspaces.source.path)/$(params.CONTEXT)/image-digest"}]
                - -terminationMessagePath=$(params.CONTEXT)/image-digested
              command:
                - /ko-app/imagedigestexporter
              computeResources: {}
              image: ko://github.com/tektoncd/pipeline/cmd/imagedigestexporter
              name: write-digest
              securityContext:
                runAsUser: 0
              workingDir: $(workspaces.source.path)
            - computeResources: {}
              image: stedolan/jq
              name: digest-to-results
              script: cat $(params.CONTEXT)/image-digested | jq '.[0].value' -rj | tee /tekton/results/IMAGE_DIGEST
              workingDir: $(workspaces.source.path)
          workspaces:
            - name: source
        workspaces:
          - name: source
            workspace: git-source
      - name: build-skaffold-app
        params:
          - name: IMAGE
            value: $(params.image-registry)/leeroy-app
          - name: CONTEXT
            value: examples/microservices/leeroy-app
          - name: DOCKERFILE
            value: $(workspaces.source.path)/examples/microservices/leeroy-app/Dockerfile
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        runAfter:
          - skaffold-unit-tests
        taskSpec:
          metadata: {}
          params:
            - description: Name (reference) of the image to build.
              name: IMAGE
              type: string
            - default: ./Dockerfile
              description: Path to the Dockerfile to build.
              name: DOCKERFILE
              type: string
            - default: ./
              description: The build context used by Kaniko.
              name: CONTEXT
              type: string
            - default: ""
              name: EXTRA_ARGS
              type: string
            - default: gcr.io/kaniko-project/executor:latest
              description: The image on which builds will run
              name: BUILDER_IMAGE
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          results:
            - description: Digest of the image just built.
              name: IMAGE_DIGEST
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - command:
                - /kaniko/executor
                - $(params.EXTRA_ARGS)
                - --dockerfile=$(params.DOCKERFILE)
                - --context=$(workspaces.source.path)/$(params.CONTEXT)
                - --destination=$(params.IMAGE)
                - --oci-layout-path=$(workspaces.source.path)/$(params.CONTEXT)/image-digest
              computeResources: {}
              env:
                - name: DOCKER_CONFIG
                  value: /tekton/home/.docker
              image: $(params.BUILDER_IMAGE)
              name: build-and-push
              securityContext:
                runAsUser: 0
              workingDir: $(workspaces.source.path)
            - args:
                - -images=[{"name":"$(params.IMAGE)","type":"image","url":"$(params.IMAGE)","digest":"","OutputImageDir":"$(workspaces.source.path)/$(params.CONTEXT)/image-digest"}]
                - -terminationMessagePath=$(params.CONTEXT)/image-digested
              command:
                - /ko-app/imagedigestexporter
              computeResources: {}
              image: ko://github.com/tektoncd/pipeline/cmd/imagedigestexporter
              name: write-digest
              securityContext:
                runAsUser: 0
              workingDir: $(workspaces.source.path)
            - computeResources: {}
              image: stedolan/jq
              name: digest-to-results
              script: cat $(params.CONTEXT)/image-digested | jq '.[0].value' -rj | tee /tekton/results/IMAGE_DIGEST
              workingDir: $(workspaces.source.path)
          workspaces:
            - name: source
        workspaces:
          - name: source
            workspace: git-source
      - name: deploy-app
        params:
          - name: imageURL
            value: $(params.image-registry)/leeroy-app@$(tasks.build-skaffold-app.results.IMAGE_DIGEST)
          - name: path
            value: $(workspaces.source.path)/examples/microservices/leeroy-app/kubernetes/deployment.yaml
          - name: yqArg
            value: -d1
          - name: yamlPathToImage
            value: spec.template.spec.containers[0].image
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: Path to the manifest to apply
              name: path
              type: string
            - description: Okay this is a hack, but I didn't feel right hard-coding `-d1` down below
              name: yqArg
              type: string
            - description: The path to the image to replace in the yaml manifest (arg to yq)
              name: yamlPathToImage
              type: string
            - description: The URL of the image to deploy
              name: imageURL
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - args:
                - w
                - -i
                - $(params.yqArg)
                - $(params.path)
                - $(params.yamlPathToImage)
                - $(params.imageURL)
              command:
                - yq
              computeResources: {}
              image: mikefarah/yq
              name: replace-image
            - args:
                - apply
                - -f
                - $(params.path)
              command:
                - kubectl
              computeResources: {}
              image: lachlanevenson/k8s-kubectl
              name: run-kubectl
          workspaces:
            - name: source
        workspaces:
          - name: source
            workspace: git-source
      - name: deploy-web
        params:
          - name: imageURL
            value: $(params.image-registry)/leeroy-web@$(tasks.build-skaffold-web.results.IMAGE_DIGEST)
          - name: path
            value: $(workspaces.source.path)/examples/microservices/leeroy-web/kubernetes/deployment.yaml
          - name: yqArg
            value: -d1
          - name: yamlPathToImage
            value: spec.template.spec.containers[0].image
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: Path to the manifest to apply
              name: path
              type: string
            - description: Okay this is a hack, but I didn't feel right hard-coding `-d1` down below
              name: yqArg
              type: string
            - description: The path to the image to replace in the yaml manifest (arg to yq)
              name: yamlPathToImage
              type: string
            - description: The URL of the image to deploy
              name: imageURL
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - args:
                - w
                - -i
                - $(params.yqArg)
                - $(params.path)
                - $(params.yamlPathToImage)
                - $(params.imageURL)
              command:
                - yq
              computeResources: {}
              image: mikefarah/yq
              name: replace-image
            - args:
                - apply
                - -f
                - $(params.path)
              command:
                - kubectl
              computeResources: {}
              image: lachlanevenson/k8s-kubectl
              name: run-kubectl
          workspaces:
            - name: source
        workspaces:
          - name: source
            workspace: git-source
    workspaces:
      - name: git-source
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: jx3-test-save-show-results
spec:
  params:
    - name: value_to_save
      value: ""
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - default: ""
        name: value_to_save
        type: string
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    results:
      - description: result_value
        name: result_value
        value: $(tasks.save-results.results.result_value)
    tasks:
      - name: save-results
        params:
          - name: value_to_save
            value: test_demo
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - default: ""
              name: value_to_save
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          results:
            - description: result_value
              name: result_value
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            imagePullPolicy: IfNotPresent
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: ubuntu:jammy
              name: save-result
              script: |
                #!/usr/bin/env sh
                set -ex
                result_value="$(params.value_to_save)"
                echo "results.result_value.path is $(results.result_value.path)"
                echo -n "${result_value}" > $(results.result_value.path)
                echo "result_value is ${result_value}"
      - name: display-results
        params:
          - name: value_to_show
            value: $(tasks.save-results.results.result_value)
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        runAfter:
          - save-results
        taskSpec:
          metadata: {}
          params:
            - default: ""
              name: value_to_show
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            imagePullPolicy: IfNotPresent
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: ubuntu:jammy
              name: show-result
              script: |
                #!/usr/bin/env sh
                set -ex
                value_to_show="$(params.value_to_show)"
                echo "value_to_show is ${value_to_show}"
  taskRunTemplate:
    podTemplate: {}
    serviceAccountName: tekton-bot
  timeouts:
    pipeline: 30m0s
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: pullrequest
spec:
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: git-clone-env-pr
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskRef:
          params:
            - name: url
              value: https://github.com/jenkins-x/jx3-pipeline-catalog.git
            - name: revision
              value: master
            - name: pathInRepo
              value: tasks/git-clone/git-clone-env-pr.yaml
          resolver: git
        workspaces:
          - name: output
            workspace: pipeline-ws
      - name: make-pr
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        runAfter:
          - git-clone-env-pr
        taskRef:
          params:
            - name: url
              value: https://github.com/jenkins-x/jx3-pipeline-catalog.git
            - name: revision
              value: master
            - name: pathInRepo
              value: tasks/environment/pullrequest/make-pr.yaml
          resolver: git
        workspaces:
          - name: output
            workspace: pipeline-ws
      - name: kubetest
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        runAfter:
          - make-pr
        taskRef:
          params:
            - name: url
              value: https://github.com/jenkins-x/jx3-pipeline-catalog.git
            - name: revision
              value: master
            - name: pathInRepo
              value: tasks/kubetest/environment.yaml
          resolver: git
        workspaces:
          - name: output
            workspace: pipeline-ws
    workspaces:
      - name: pipeline-ws
  taskRunTemplate:
    podTemplate: {}
    serviceAccountName: tekton-bot
  timeouts:
    pipeline: 12h0m0s
  workspaces:
    - name: pipeline-ws
      volumeClaimTemplate:
        metadata:
          creationTimestamp: null
        spec:
          accessModes:
            - ReadWriteOnce
          computeResources:
            requests:
              storage: 1Gi
        status: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    lighthouse.jenkins-x.io/cloneURI: https://github.com/jenkins-x/jx.git
  creationTimestamp: "2020-07-20T19:50:21Z"
  generation: 1
  labels:
    branch: PR-7463
    build: "17"
    context: boot-vault
    jenkins.io/pipelineType: build
    lighthouse.jenkins-x.io/baseSHA: c47ce72d4e2991a9440e6d954ecbf79d596f9352
    lighthouse.jenkins-x.io/branch: PR-7463
    lighthouse.jenkins-x.io/buildNum: "17"
    lighthouse.jenkins-x.io/context: boot-vault
    lighthouse.jenkins-x.io/id: f46327af-b47e-11ea-b797-9256b7b8d9b0
    lighthouse.jenkins-x.io/lastCommitSHA: 8a3c5f595cdc3162e46390c72a5d22fb9c89d1df
    lighthouse.jenkins-x.io/refs.org: jenkins-x
    lighthouse.jenkins-x.io/refs.repo: jx
    owner: jenkins-x
    repository: jx
    tekton.dev/pipeline: jenkins-x-jx-pr-7463-boot-vault-9mbgb-17
  name: jenkins-x-jx-pr-7463-boot-vault-9mbgb-17
  namespace: jx
  resourceVersion: "16726271"
  selfLink: /apis/tekton.dev/v1beta1/namespaces/jx/pipelineruns/jenkins-x-jx-pr-7463-boot-vault-9mbgb-17
  uid: 3edf18d1-cac2-11ea-a610-42010a8400cb
spec:
  params:
    - name: version
      value: 0.0.0-SNAPSHOT-PR-7463-17
    - name: build_id
      value: "17"
  pipelineRef:
    apiVersion: tekton.dev/v1beta1
    name: jenkins-x-jx-pr-7463-boot-vault-9mbgb-17
  taskRunTemplate:
    podTemplate: {}
    serviceAccountName: tekton-bot
  timeouts:
    pipeline: 240h0m0s
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    lighthouse.jenkins-x.io/loadFileRefs: .*
  creationTimestamp: null
  name: pipelinerun-with-extra-params
spec:
  params:
    - name: pl-param-x
      value: "100"
    - name: pl-param-y
      value: "200"
    - name: pl-param-z
      value: "300"
  pipelineSpec:
    params:
      - name: pl-param-x
        type: string
      - name: pl-param-y
        type: string
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: add-params
        params:
          - name: a
            value: $(params.pl-param-x)
          - name: b
            value: $(params.pl-param-y)
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: The first integer
              name: a
              type: string
            - description: The second integer
              name: b
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              image: bash:latest
              name: sum
              script: |-
                #!/usr/bin/env bash
                echo -n $(( "$(inputs.params.a)" + "$(inputs.params.b)" ))
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    lighthouse.jenkins-x.io/appendStepsURL: https://gist.githubusercontent.com/jstrachan/1937a809fd4223f3588db32cbb3a034f/raw/3bb56dd20cae2795e0ec4788d79e18d9486da9d9/sample-git-clone-task.yaml
  creationTimestamp: null
  name: cheese
spec:
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: cheese
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              image: some/linter:1.2.3
              name: lint
              workingDir: /workspace/source
            - computeResources: {}
              image: gcr.io/jenkinsxio/builder-jx:2.1.142-761
              name: git-clone
              script: |
                #!/usr/bin/env bash
                export SUBDIR="source"
                echo "git cloning url: $REPO_URL version $PULL_PULL_SHA to dir: $SUBDIR"
                git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot}
                git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com}
                git config --global credential.helper store
                git clone $REPO_URL $SUBDIR
                cd $SUBDIR
                git checkout $PULL_PULL_SHA
                echo "checked out revision: $PULL_PULL_SHA to dir: $SUBDIR"
              workingDir: /workspace
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    lighthouse.jenkins-x.io/defaultParameters: "false"
  creationTimestamp: null
  name: cheese
spec:
  pipelineSpec:
    tasks:
      - name: cheese
        taskSpec:
          metadata: {}
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            volumeMounts:
              - mountPath: /home/jenkins
                name: workspace-volume
              - mountPath: /etc/podinfo
                name: podinfo
                readOnly: true
            workingDir: /workspace/source
          steps:
            - args:
                - -c
                - 'mkdir -p $HOME; git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot}; git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com}; git config --global credential.helper store; git clone $(params.REPO_URL) $(params.subdirectory); echo cloned url: $(params.REPO_URL) to dir: $(params.subdirectory); cd $(params.subdirectory); git checkout $(params.PULL_PULL_SHA); echo checked out revision: $(params.PULL_PULL_SHA) to dir: $(params.subdirectory)'
              command:
                - /bin/sh
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-jx:2.1.142-761
              name: git-clone
              workingDir: /workspace
            - args:
                - gitops
                - git
                - setup
                - --namespace
                - jx-git-operator
              command:
                - jx
              computeResources: {}
              image: gcr.io/jenkinsxio/jx-cli:latest
              name: git-setup
              workingDir: /workspace
            - args:
                - '[ -d /builder/home ] || mkdir -p /builder && ln -s /tekton/home /builder/home'
              command:
                - /bin/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-jx:2.1.142-761
              name: setup-builder-home
            - args:
                - step
                - git
                - merge
                - --verbose
                - --baseSHA
                - $(params.PULL_BASE_SHA)
                - --sha
                - $(params.PULL_PULL_SHA)
                - --baseBranch
                - $(params.PULL_BASE_REF)
              command:
                - jx
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-jx:2.1.142-761
              name: git-merge
            - args:
                - gitops
                - variables
              command:
                - jx
              computeResources: {}
              image: gcr.io/jenkinsxio/jx-cli:latest
              name: jx-variables
            - args:
                - jx step credential -s npm-token -k file -f /builder/home/.npmrc --optional=true
              command:
                - /bin/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-nodejs:2.1.150-769
              name: build-npmrc
            - args:
                - npm install
              command:
                - /bin/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-nodejs:2.1.150-769
              name: build-npm-install
            - args:
                - CI=true DISPLAY=:99 npm test
              command:
                - /bin/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-nodejs:2.1.150-769
              name: build-npm-test
            - args:
                - source .jx/variables.sh && cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json && /kaniko/executor $KANIKO_FLAGS --cache=true --cache-dir=/workspace --context=/workspace/source --dockerfile=/workspace/source/Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION --cache-repo=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/cache
              command:
                - /busybox/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/kaniko:0.0.5
              name: build-container-build
            - args:
                - source /workspace/source/.jx/variables.sh && jx preview create
              command:
                - /bin/bash
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/jx-cli:latest
              name: promote-jx-preview
          volumes:
            - emptyDir: {}
              name: workspace-volume
            - downwardAPI:
                items:
                  - fieldRef:
                      fieldPath: metadata.labels
                    path: labels
              name: podinfo
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: REPO_URL
      value: ""
    - name: PULL_PULL_SHA
      value: master
    - name: subdirectory
      value: source
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: master
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
  pipelineSpec:
    params:
      - description: git url to clone
        name: REPO_URL
        type: string
      - default: master
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - default: source
        description: subdirectory inside of /workspace to clone the git repo
        name: subdirectory
        type: string
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: 'the kind of job: postsubmit or presubmit'
        name: JOB_TYPE
        type: string
      - default: master
        description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
    tasks:
      - name: cheese
        params:
          - name: REPO_URL
            value: $(params.REPO_URL)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: subdirectory
            value: $(params.subdirectory)
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
        taskSpec:
          metadata: {}
          params:
            - description: git url to clone
              name: REPO_URL
              type: string
            - default: master
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - default: source
              description: subdirectory inside of /workspace to clone the git repo
              name: subdirectory
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: 'the kind of job: postsubmit or presubmit'
              name: JOB_TYPE
              type: string
            - default: master
              description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            volumeMounts:
              - mountPath: /home/jenkins
                name: workspace-volume
              - mountPath: /etc/podinfo
                name: podinfo
                readOnly: true
            workingDir: /workspace/source
          steps:
            - args:
                - -c
                - 'mkdir -p $HOME; git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot}; git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com}; git config --global credential.helper store; git clone $(params.REPO_URL) $(params.subdirectory); echo cloned url: $(params.REPO_URL) to dir: $(params.subdirectory); cd $(params.subdirectory); git checkout $(params.PULL_PULL_SHA); echo checked out revision: $(params.PULL_PULL_SHA) to dir: $(params.subdirectory)'
              command:
                - /bin/sh
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-jx:2.1.142-761
              name: git-clone
              workingDir: /workspace
            - args:
                - gitops
                - git
                - setup
                - --namespace
                - jx-git-operator
              command:
                - jx
              computeResources: {}
              image: gcr.io/jenkinsxio/jx-cli:latest
              name: git-setup
              workingDir: /workspace
            - args:
                - '[ -d /builder/home ] || mkdir -p /builder && ln -s /tekton/home /builder/home'
              command:
                - /bin/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-jx:2.1.142-761
              name: setup-builder-home
            - args:
                - step
                - git
                - merge
                - --verbose
                - --baseSHA
                - $(params.PULL_BASE_SHA)
                - --sha
                - $(params.PULL_PULL_SHA)
                - --baseBranch
                - $(params.PULL_BASE_REF)
              command:
                - jx
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-jx:2.1.142-761
              name: git-merge
            - args:
                - gitops
                - variables
              command:
                - jx
              computeResources: {}
              image: gcr.io/jenkinsxio/jx-cli:latest
              name: jx-variables
            - args:
                - jx step credential -s npm-token -k file -f /builder/home/.npmrc --optional=true
              command:
                - /bin/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-nodejs:2.1.150-769
              name: build-npmrc
            - args:
                - npm install
              command:
                - /bin/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-nodejs:2.1.150-769
              name: build-npm-install
            - args:
                - CI=true DISPLAY=:99 npm test
              command:
                - /bin/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-nodejs:2.1.150-769
              name: build-npm-test
            - args:
                - source .jx/variables.sh && cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json && /kaniko/executor $KANIKO_FLAGS --cache=true --cache-dir=/workspace --context=/workspace/source --dockerfile=/workspace/source/Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION --cache-repo=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/cache
              command:
                - /busybox/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/kaniko:0.0.5
              name: build-container-build
            - args:
                - source /workspace/source/.jx/variables.sh && jx preview create
              command:
                - /bin/bash
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/jx-cli:latest
              name: promote-jx-preview
          volumes:
            - emptyDir: {}
              name: workspace-volume
            - downwardAPI:
                items:
                  - fieldRef:
                      fieldPath: metadata.labels
                    path: labels
              name: podinfo
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    lighthouse.jenkins-x.io/prependStepsURL: https://gist.githubusercontent.com/jstrachan/1937a809fd4223f3588db32cbb3a034f/raw/3bb56dd20cae2795e0ec4788d79e18d9486da9d9/sample-git-clone-task.yaml
  creationTimestamp: null
  name: cheese
spec:
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: cheese
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              image: gcr.io/jenkinsxio/builder-jx:2.1.142-761
              name: git-clone
              script: |
                #!/usr/bin/env bash
                export SUBDIR="source"
                echo "git cloning url: $REPO_URL version $PULL_PULL_SHA to dir: $SUBDIR"
                git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot}
                git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com}
                git config --global credential.helper store
                git clone $REPO_URL $SUBDIR
                cd $SUBDIR
                git checkout $PULL_PULL_SHA
                echo "checked out revision: $PULL_PULL_SHA to dir: $SUBDIR"
              workingDir: /workspace
            - computeResources: {}
              image: some/linter:1.2.3
              name: lint
              workingDir: /workspace/source
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  pipelineSpec:
    params:
      - default: param-value
        name: PARAM
        type: string
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: cheese
        params:
          - name: PARAM
            value: $(params.PARAM)
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - default: param-value
              name: PARAM
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              image: ubuntu
              name: noshebang
              script: echo "no shebang"
            - computeResources: {}
              env:
                - name: FOO
                  value: foooooooo
              image: ubuntu
              name: bash
              script: |
                #!/usr/bin/env bash
                set -euxo pipefail
                echo "Hello from Bash!"
                echo FOO is ${FOO}
                echo substring is ${FOO:2:4}
                for i in {1..10}; do
                  echo line $i
                done
            - computeResources: {}
              image: ubuntu
              name: place-file
              script: |
                #!/usr/bin/env bash
                echo "echo Hello from script file" > /workspace/hello
                chmod +x /workspace/hello
            - computeResources: {}
              image: ubuntu
              name: run-file
              script: |
                #!/usr/bin/env bash
                /workspace/hello
            - computeResources: {}
              image: ubuntu
              name: contains-eof
              script: |
                #!/usr/bin/env bash
                cat > file << EOF
                this file has some contents
                EOF
                cat file
            - computeResources: {}
              image: node
              name: node
              script: |
                #!/usr/bin/env node
                console.log("Hello from Node!")
            - computeResources: {}
              image: python
              name: python
              script: |
                #!/usr/bin/env python3
                print("Hello from Python!")
            - computeResources: {}
              image: perl
              name: perl
              script: |
                #!/usr/bin/perl
                print "Hello from Perl!"
            - computeResources: {}
              image: python
              name: params-applied
              script: |
                #!/usr/bin/env python3
                v = '$(params.PARAM)'
                if v != 'param-value':
                  print('Param values not applied')
                  print('Got: ', v)
                  exit(1)
            - args:
                - hello
                - world
              computeResources: {}
              image: ubuntu
              name: args-allowed
              script: |-
                #!/usr/bin/env bash
                [[ $# == 2 ]]
                [[ $1 == "hello" ]]
                [[ $2 == "world" ]]
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: cheese
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            volumeMounts:
              - mountPath: /home/jenkins
                name: workspace-volume
              - mountPath: /etc/podinfo
                name: podinfo
                readOnly: true
            workingDir: /workspace/source
          steps:
            - args:
                - -c
                - mkdir -p $HOME; git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot}; git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com}; git config --global credential.helper store; git clone $REPO_URL
              command:
                - /bin/sh
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-jx:2.1.142-761
              name: git-clone
              workingDir: /workspace
            - args:
                - gitops
                - git
                - setup
                - --namespace
                - jx-git-operator
              command:
                - jx
              computeResources: {}
              image: gcr.io/jenkinsxio/jx-cli:latest
              name: git-setup
              workingDir: /workspace
            - args:
                - '[ -d /builder/home ] || mkdir -p /builder && ln -s /tekton/home /builder/home'
              command:
                - /bin/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-jx:2.1.142-761
              name: setup-builder-home
            - args:
                - step
                - git
                - merge
              command:
                - jx
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-jx:2.1.142-761
              name: git-merge
            - args:
                - gitops
                - variables
              command:
                - jx
              computeResources: {}
              image: gcr.io/jenkinsxio/jx-cli:latest
              name: jx-variables
            - args:
                - jx step credential -s npm-token -k file -f /builder/home/.npmrc --optional=true
              command:
                - /bin/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-nodejs:2.1.150-769
              name: build-npmrc
            - args:
                - npm install
              command:
                - /bin/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-nodejs:2.1.150-769
              name: build-npm-install
            - args:
                - CI=true DISPLAY=:99 npm test
              command:
                - /bin/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-nodejs:2.1.150-769
              name: build-npm-test
            - args:
                - source .jx/variables.sh && cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json && /kaniko/executor $KANIKO_FLAGS --cache=true --cache-dir=/workspace --context=/workspace/source --dockerfile=/workspace/source/Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION --cache-repo=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/cache
              command:
                - /busybox/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/kaniko:0.0.5
              name: build-container-build
            - args:
                - source /workspace/source/.jx/variables.sh && jx preview create
              command:
                - /bin/bash
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/jx-cli:latest
              name: promote-jx-preview
          volumes:
            - emptyDir: {}
              name: workspace-volume
            - downwardAPI:
                items:
                  - fieldRef:
                      fieldPath: metadata.labels
                    path: labels
              name: podinfo
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.19.0
              name: git-clone
              script: |
                #!/bin/sh
                export SUBDIR="source"
                echo "git cloning url: $REPO_URL version $PULL_PULL_SHA to dir: $SUBDIR"
                git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot}
                git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com}
                git config --global credential.helper store
                git clone $REPO_URL $SUBDIR
                cd $SUBDIR
                git checkout $PULL_PULL_SHA
                echo "checked out revision: $PULL_PULL_SHA to dir: $SUBDIR"
              workingDir: /workspace
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.62
              name: git-merge
              script: |
                #!/usr/bin/env sh
                jx gitops git merge variables
              workingDir: /workspace/source
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm test
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: params
spec:
  params:
    - name: FOO
      value: BAR-CATALOG
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - default: BAR-CATALOG
        name: FOO
        type: string
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: test-params
        params:
          - name: FOO
            value: $(params.FOO)
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - default: BAR-CATALOG
              name: FOO
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: FOO
                value: $(params.FOO)
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              image: gcr.io/cloud-builders/kubectl@sha256:8ab94be8b2b4f3d117f02d868b39540fddd225447abf4014f7ba4765cb39f753
              name: test-echo
              script: |-
                #!/usr/bin/env bash
                echo "FOO: $(params.FOO)"
  taskRunTemplate:
    podTemplate: {}
    serviceAccountName: tekton-bot
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: params
spec:
  params:
    - name: FOO
      value: BAR-CATALOG
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - default: BAR-CATALOG
        name: FOO
        type: string
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: test-params
        params:
          - name: FOO
            value: $(params.FOO)
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - default: BAR-CATALOG
              name: FOO
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
              - name: FOO
                value: $(params.FOO)
          steps:
            - computeResources: {}
              image: gcr.io/cloud-builders/kubectl@sha256:8ab94be8b2b4f3d117f02d868b39540fddd225447abf4014f7ba4765cb39f753
              name: test-echo
              script: |-
                #!/usr/bin/env bash
                echo "FOO: $(params.FOO)"
  taskRunTemplate:
    podTemplate: {}
    serviceAccountName: tekton-bot
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              env:
                - name: FOO
                  value: foo
              image: common-image
              name: common-build
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              env:
                - name: FOO
                  value: one
              image: common-image
              name: common-build
  taskRunTemplate: {}
  timeouts:
    pipeline: 240h0m0s
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: node:12-slim
              name: my-first-step
              script: |
                #!/bin/sh
                npm first thing
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm test
            - computeResources: {}
              image: node:12-slim
              name: my-pre-build-container
              script: |
                #!/bin/sh
                npm pre build container
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
            - computeResources: {}
              image: node:12-slim
              name: my-final-step
              script: |
                #!/bin/sh
                npm final thing
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: node:12-slim
              name: my-first-step
              script: |
                #!/bin/sh
                npm first thing
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm test
            - computeResources: {}
              image: node:12-slim
              name: my-pre-build-container
              script: |
                #!/bin/sh
                npm pre build container
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
            - computeResources: {}
              image: node:12-slim
              name: my-final-step
              script: |
                #!/bin/sh
                npm final thing
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: url
      value: ""
    - name: revision
      value: ""
    - name: refspec
      value: ""
    - name: submodules
      value: "true"
    - name: depth
      value: "1"
    - name: sslVerify
      value: "true"
    - name: subdirectory
      value: ""
    - name: deleteExisting
      value: "true"
    - name: httpProxy
      value: ""
    - name: httpsProxy
      value: ""
    - name: noProxy
      value: ""
    - name: verbose
      value: "true"
    - name: gitInitImage
      value: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.18.1
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: git url to clone
        name: url
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: revision
        type: string
      - default: ""
        description: (optional) git refspec to fetch before checking out revision
        name: refspec
        type: string
      - default: "true"
        description: defines if the resource should initialize and fetch the submodules
        name: submodules
        type: string
      - default: "1"
        description: performs a shallow clone where only the most recent commit(s) will be fetched
        name: depth
        type: string
      - default: "true"
        description: defines if http.sslVerify should be set to true or false in the global git config
        name: sslVerify
        type: string
      - default: ""
        description: subdirectory inside the "output" workspace to clone the git repo into
        name: subdirectory
        type: string
      - default: "true"
        description: clean out the contents of the repo's destination directory (if it already exists) before trying to clone the repo there
        name: deleteExisting
        type: string
      - default: ""
        description: git HTTP proxy server for non-SSL requests
        name: httpProxy
        type: string
      - default: ""
        description: git HTTPS proxy server for SSL requests
        name: httpsProxy
        type: string
      - default: ""
        description: git no proxy - opt out of proxying HTTP/HTTPS requests
        name: noProxy
        type: string
      - default: "true"
        description: log the commands used during execution
        name: verbose
        type: string
      - default: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.18.1
        description: the image used where the git-init binary is
        name: gitInitImage
        type: string
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    results:
      - description: The precise commit SHA that was fetched by this Task
        name: commit
        value: $(tasks.from-build-pack.results.commit)
      - description: The precise URL that was fetched by this Task
        name: url
        value: $(tasks.from-build-pack.results.url)
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
            - description: git url to clone
              name: url
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: revision
              type: string
            - default: ""
              description: (optional) git refspec to fetch before checking out revision
              name: refspec
              type: string
            - default: "true"
              description: defines if the resource should initialize and fetch the submodules
              name: submodules
              type: string
            - default: "1"
              description: performs a shallow clone where only the most recent commit(s) will be fetched
              name: depth
              type: string
            - default: "true"
              description: defines if http.sslVerify should be set to true or false in the global git config
              name: sslVerify
              type: string
            - default: ""
              description: subdirectory inside the "output" workspace to clone the git repo into
              name: subdirectory
              type: string
            - default: "true"
              description: clean out the contents of the repo's destination directory (if it already exists) before trying to clone the repo there
              name: deleteExisting
              type: string
            - default: ""
              description: git HTTP proxy server for non-SSL requests
              name: httpProxy
              type: string
            - default: ""
              description: git HTTPS proxy server for SSL requests
              name: httpsProxy
              type: string
            - default: ""
              description: git no proxy - opt out of proxying HTTP/HTTPS requests
              name: noProxy
              type: string
            - default: "true"
              description: log the commands used during execution
              name: verbose
              type: string
            - default: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.18.1
              description: the image used where the git-init binary is
              name: gitInitImage
              type: string
          results:
            - description: The precise commit SHA that was fetched by this Task
              name: commit
            - description: The precise URL that was fetched by this Task
              name: url
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            volumeMounts:
              - mountPath: /tekton/home/npm
                name: npmrc
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              env:
                - name: PARAM_URL
                  value: $(params.url)
                - name: PARAM_REVISION
                  value: $(params.revision)
                - name: PARAM_REFSPEC
                  value: $(params.refspec)
                - name: PARAM_SUBMODULES
                  value: $(params.submodules)
                - name: PARAM_DEPTH
                  value: $(params.depth)
                - name: PARAM_SSL_VERIFY
                  value: $(params.sslVerify)
                - name: PARAM_SUBDIRECTORY
                  value: $(params.subdirectory)
                - name: PARAM_DELETE_EXISTING
                  value: $(params.deleteExisting)
                - name: PARAM_HTTP_PROXY
                  value: $(params.httpProxy)
                - name: PARAM_HTTPS_PROXY
                  value: $(params.httpsProxy)
                - name: PARAM_NO_PROXY
                  value: $(params.noProxy)
                - name: PARAM_VERBOSE
                  value: $(params.verbose)
                - name: WORKSPACE_OUTPUT_PATH
                  value: $(workspaces.output.path)
              image: $(params.gitInitImage)
              name: clone
              script: |
                #!/bin/sh
                set -eu -o pipefail

                if [[ "${PARAM_VERBOSE}" == "true" ]] ; then
                  set -x
                fi

                CHECKOUT_DIR="${WORKSPACE_OUTPUT_PATH}/${PARAM_SUBDIRECTORY}"

                cleandir() {
                  # Delete any existing contents of the repo directory if it exists.
                  #
                  # We don't just "rm -rf $CHECKOUT_DIR" because $CHECKOUT_DIR might be "/"
                  # or the root of a mounted volume.
                  if [[ -d "$CHECKOUT_DIR" ]] ; then
                    # Delete non-hidden files and directories
                    rm -rf "$CHECKOUT_DIR"/*
                    # Delete files and directories starting with . but excluding ..
                    rm -rf "$CHECKOUT_DIR"/.[!.]*
                    # Delete files and directories starting with .. plus any other character
                    rm -rf "$CHECKOUT_DIR"/..?*
                  fi
                }

                if [[ "${PARAM_DELETE_EXISTING}" == "true" ]] ; then
                  cleandir
                fi

                test -z "${PARAM_HTTP_PROXY}" || export HTTP_PROXY="${PARAM_HTTP_PROXY}"
                test -z "${PARAM_HTTPS_PROXY}" || export HTTPS_PROXY="${PARAM_HTTPS_PROXY}"
                test -z "${PARAM_NO_PROXY}" || export NO_PROXY="${PARAM_NO_PROXY}"

                /ko-app/git-init \
                  -url "${PARAM_URL}" \
                  -revision "${PARAM_REVISION}" \
                  -refspec "${PARAM_REFSPEC}" \
                  -path "$CHECKOUT_DIR" \
                  -sslVerify="${PARAM_SSL_VERIFY}" \
                  -submodules="${PARAM_SUBMODULES}" \
                  -depth "${PARAM_DEPTH}"
                cd "$CHECKOUT_DIR"
                RESULT_SHA="$(git rev-parse HEAD)"
                EXIT_CODE="$?"
                if [ "$EXIT_CODE" != 0 ] ; then
                  exit $EXIT_CODE
                fi
                # ensure we don't add a trailing newline to the result
                echo -n "$RESULT_SHA" > $(results.commit.path)
                echo -n "${PARAM_URL}" > $(results.url.path)
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm test
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
          volumes:
            - name: npmrc
              secret:
                optional: true
                secretName: npmrc
          workspaces:
            - description: The git repo will be cloned onto the volume backing this workspace
              name: output
        workspaces:
          - name: output
            workspace: output
    workspaces:
      - description: The git repo will be cloned onto the volume backing this workspace
        name: output
  taskRunTemplate: {}
  timeouts:
    pipeline: 24h0m0s
  workspaces:
    - emptyDir: {}
      name: output
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            volumeMounts:
              - mountPath: /tekton/home/npm
                name: npmrc
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm test
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
          volumes:
            - name: npmrc
              secret:
                optional: true
                secretName: npmrc
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            volumeMounts:
              - mountPath: /tekton/home/npm
                name: npmrc
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm test
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
          volumes:
            - name: npmrc
              secret:
                optional: true
                secretName: npmrc
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          sidecars:
            - computeResources: {}
              env:
                - name: START_XVFB
                  value: "false"
              image: selenium/standalone-chrome
              name: selenium
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            volumeMounts:
              - mountPath: /tekton/home/npm
                name: npmrc
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm test
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
          volumes:
            - name: npmrc
              secret:
                optional: true
                secretName: npmrc
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            volumeMounts:
              - mountPath: /tekton/home/npm
                name: npmrc
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm test
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              env:
                - name: IMAGE
                  value: gcr.io/myproject/myimage
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build-cheese
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              env:
                - name: IMAGE
                  value: gcr.io/myproject/wine
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build-wine
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
          volumes:
            - name: npmrc
              secret:
                optional: true
                secretName: npmrc
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              env:
                - name: MY_NEW_ENV_VAR
                  value: this-is-a-new-value
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              envFrom:
                - configMapRef:
                    name: myconfigmap
                    optional: true
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/usr/bin/env sh
                echo "this is my custom script"
              workingDir: /workspace/mynewdir
            - args:
                - -c
                - echo this is a new custom command
              command:
                - bash
              computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
              volumeMounts:
                - mountPath: /foo/bar
                  name: my-new-volume
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 600m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            volumeMounts:
              - mountPath: /tekton/home/npm-something-else
                name: npmrc
            workingDir: /workspace/my-source
          steps:
            - computeResources: {}
              image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.19.0
              name: git-clone
              script: |
                #!/bin/sh
                export SUBDIR="source"
                echo "git cloning url: $REPO_URL version $PULL_PULL_SHA to dir: $SUBDIR"
                git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot}
                git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com}
                git config --global credential.helper store
                git clone $REPO_URL $SUBDIR
                cd $SUBDIR
                git checkout $PULL_PULL_SHA
                echo "checked out revision: $PULL_PULL_SHA to dir: $SUBDIR"
              workingDir: /workspace
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.62
              name: git-merge
              script: |
                #!/usr/bin/env sh
                jx gitops git merge variables
              workingDir: /workspace/source
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm test
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
            - command:
                - jx-updatebot
                - pr
              computeResources: {}
              image: ghcr.io/jenkins-x/jx-updatebot:0.0.82
              name: promote-release
          volumes:
            - name: npmrc
              secret:
                optional: true
                secretName: npmrc
  taskRunTemplate: {}
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            volumeMounts:
              - mountPath: /tekton/home/npm
                name: npmrc
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm test
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
            - computeResources: {}
              image: ghcr.io/jenkins-x/jx-updatebot:0.0.82
              name: promote-release
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx updatebot argo promote --target-git-url https://github.com/myorg/my-staging-repo
          volumes:
            - name: npmrc
              secret:
                optional: true
                secretName: npmrc
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:latest
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm test
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          sidecars:
            - computeResources: {}
              env:
                - name: START_XVFB
                  value: "false"
              image: selenium/standalone-chrome
              name: selenium
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            volumeMounts:
              - mountPath: /tekton/home/npm
                name: npmrc
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm test
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
          volumes:
            - name: npmrc
              secret:
                optional: true
                secretName: npmrc
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: pullrequest
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          sidecars:
            - computeResources: {}
              image: xyz/json-server:0.1.15
              name: json-server
              script: |
                #!/bin/ash
                while [ ! -f /workspace/source/JsonServer/mocks.json ] ; do
                  echo "Waiting for mocks.json"
                  sleep 1
                done
                json-server --watch /workspace/source/JsonServer/mocks.json
              workspaces:
                - mountPath: ""
                  name: source
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            volumeMounts:
              - mountPath: /tekton/home/npm
                name: npmrc
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.19.0
              name: git-clone
              script: |
                #!/bin/sh
                export SUBDIR="source"
                echo "git cloning url: $REPO_URL version $PULL_BASE_SHA to dir: $SUBDIR"
                git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot}
                git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com}
                git config --global credential.helper store
                git clone $REPO_URL $SUBDIR
                cd $SUBDIR
                git checkout $PULL_BASE_SHA
                echo "checked out revision: $PULL_BASE_SHA to dir: $SUBDIR"
              workingDir: /workspace
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:14-slim
              name: ""
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                yarn install
                CI=true DISPLAY=:99 yarn run test:unit
          volumes:
            - name: npmrc
              secret:
                optional: true
                secretName: npmrc
          workspaces:
            - description: The git repo will be cloned onto the volume backing this workspace
              mountPath: /workspace
              name: output
            - name: source
        workspaces:
          - name: source
            workspace: source
          - name: output
            workspace: output
    workspaces:
      - name: source
      - description: The git repo will be cloned onto the volume backing this workspace
        name: output
  taskRunTemplate:
    podTemplate: {}
    serviceAccountName: tekton-bot
  timeouts:
    pipeline: 12h0m0s
  workspaces:
    - emptyDir: {}
      name: source
    - emptyDir: {}
      name: output
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: release
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: _JAVA_OPTIONS
                value: -XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx192m
              - name: MAVEN_OPTS
                value: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=25 -Dmaven.wagon.http.retryHandler.count=3
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            volumeMounts:
              - mountPath: /root/.m2/
                name: maven-settings
              - mountPath: /root/.gnupg
                name: release-gpg
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.19.0
              name: git-clone
              script: |
                #!/bin/sh
                export SUBDIR="source"
                echo "git cloning url: $REPO_URL version $PULL_BASE_SHA to dir: $SUBDIR"
                git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot}
                git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com}
                git config --global credential.helper store
                git clone $REPO_URL $SUBDIR
                cd $SUBDIR
                git checkout $PULL_BASE_SHA
                echo "checked out revision: $PULL_BASE_SHA to dir: $SUBDIR"
              workingDir: /workspace
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-release-version:2.2.5
              name: next-version
              script: |
                #!/usr/bin/env sh
                jx-release-version > VERSION
            - computeResources: {}
              image: ghcr.io/jenkins-x/jx-boot:3.1.335
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: maven:3.6-openjdk-11
              name: build-mvn-deploy
              script: |
                #!/usr/bin/env bash
                source .jx/variables.sh

                # modify the pom.xml
                echo "upgrading the pom to version $VERSION"
                mvn versions:set -DnewVersion=$VERSION

                mvn --no-transfer-progress clean deploy
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-registry:0.0.11
              name: check-registry
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$PUSH_CONTAINER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-changelog:0.0.34
              name: promote-changelog
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh

                if [ -d "charts/$REPO_NAME" ]; then
                sed -i -e "s/^version:.*/version: $VERSION/" ./charts/$REPO_NAME/Chart.yaml
                sed -i -e "s/repository:.*/repository: $DOCKER_REGISTRY\/$DOCKER_REGISTRY_ORG\/$APP_NAME/" ./charts/$REPO_NAME/values.yaml
                sed -i -e "s/tag:.*/tag: $VERSION/" ./charts/$REPO_NAME/values.yaml;
                else echo no charts; fi

                jx changelog create --version v${VERSION}

                git add * || true
                git commit -a -m "chore: release $VERSION" --allow-empty
                git tag -fa v$VERSION -m "Release version $VERSION"
                git push --force origin v$VERSION
            - computeResources: {}
              image: ghcr.io/jenkins-x/jx-boot:3.1.335
              name: promote-helm-release
              script: |
                #!/usr/bin/env sh
                jx gitops helm release
            - computeResources: {}
              image: ghcr.io/jenkins-x/jx-promote:0.0.243
              name: promote-jx-promote
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx promote -b --all --timeout 1h --no-poll
          volumes:
            - name: maven-settings
              secret:
                secretName: jenkins-maven-settings
            - name: release-gpg
              secret:
                optional: true
                secretName: jenkins-release-gpg
          workspaces:
            - description: The git repo will be cloned onto the volume backing this workspace
              mountPath: /workspace
              name: output
        workspaces:
          - name: output
            workspace: output
    workspaces:
      - description: The git repo will be cloned onto the volume backing this workspace
        name: output
  taskRunTemplate:
    podTemplate: {}
    serviceAccountName: tekton-bot
  timeouts:
    pipeline: 240h0m0s
  workspaces:
    - emptyDir: {}
      name: output
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  pipelineSpec:
    finally:
      - name: lint-pr-comment
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              image: ghcr.io/jenkins-x/jx-gitops:0.3.1
              name: lint-pr-comment
              script: |
                #!/bin/sh
                set -x
                . .jx/variables.sh
                jx gitops pr comment -c "$(cat issues.md)"
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              env:
                - name: FOO
                  value: one
              image: common-image
              name: common-build
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    finally:
      - name: from-build-pack-finally
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              env:
                - name: FOO
                  value: finally
              image: common-image
              name: common-build
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              env:
                - name: FOO
                  value: foo
              image: common-image
              name: common-build
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    lighthouse.jenkins-x.io/loadFileRefs: .*
  creationTimestamp: null
  name: demo-pipeline
spec:
  pipelineSpec:
    params:
      - default: gcr.io/christiewilson-catfactory
        name: image-registry
        type: string
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: fetch-from-git
        params:
          - name: url
            value: https://github.com/GoogleContainerTools/skaffold
          - name: revision
            value: v0.32.0
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: git url to clone
              name: url
              type: string
            - default: master
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: revision
              type: string
            - default: "true"
              description: defines if the resource should initialize and fetch the submodules
              name: submodules
              type: string
            - default: "1"
              description: performs a shallow clone where only the most recent commit(s) will be fetched
              name: depth
              type: string
            - default: "true"
              description: defines if http.sslVerify should be set to true or false in the global git config
              name: sslVerify
              type: string
            - default: ""
              description: subdirectory inside the "output" workspace to clone the git repo into
              name: subdirectory
              type: string
            - default: "false"
              description: clean out the contents of the repo's destination directory (if it already exists) before trying to clone the repo there
              name: deleteExisting
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          results:
            - description: The precise commit SHA that was fetched by this Task
              name: commit
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              image: ko://github.com/tektoncd/pipeline/cmd/git-init
              name: clone
              script: |-
                CHECKOUT_DIR="$(workspaces.output.path)/$(params.subdirectory)"
                cleandir() {
                  # Delete any existing contents of the repo directory if it exists.
                  #
                  # We don't just "rm -rf $CHECKOUT_DIR" because $CHECKOUT_DIR might be "/"
                  # or the root of a mounted volume.
                  if [[ -d "$CHECKOUT_DIR" ]] ; then
                    # Delete non-hidden files and directories
                    rm -rf "$CHECKOUT_DIR"/*
                    # Delete files and directories starting with . but excluding ..
                    rm -rf "$CHECKOUT_DIR"/.[!.]*
                    # Delete files and directories starting with .. plus any other character
                    rm -rf "$CHECKOUT_DIR"/..?*
                  fi
                }
                if [[ "$(params.deleteExisting)" == "true" ]] ; then
                  cleandir
                fi
                /ko-app/git-init \
                  -url "$(params.url)" \
                  -revision "$(params.revision)" \
                  -path "$CHECKOUT_DIR" \
                  -sslVerify="$(params.sslVerify)" \
                  -submodules="$(params.submodules)" \
                  -depth="$(params.depth)"
                cd "$CHECKOUT_DIR"
                RESULT_SHA="$(git rev-parse HEAD | tr -d '\n')"
                EXIT_CODE="$?"
                if [ "$EXIT_CODE" != 0 ]
                then
                  exit $EXIT_CODE
                fi
                # Make sure we don't add a trailing newline to the result!
                echo -n "$RESULT_SHA" > $(results.commit.path)
          workspaces:
            - description: The git repo will be cloned onto the volume backing this workspace
              name: output
        workspaces:
          - name: output
            workspace: git-source
      - name: skaffold-unit-tests
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        runAfter:
          - fetch-from-git
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              env:
                - name: GOPATH
                  value: /workspace/go
              image: golang
              name: run-tests
              script: |-
                # The intention behind this example Task is to run unit test, however we
                # currently do nothing to ensure that a unit test issue doesn't cause this example
                # to fail unnecessarily. In the future we could re-introduce the unit tests (since
                # we are now pinning the version of Skaffold we pull) or use Tekton Pipelines unit tests.
                echo "pass"
              workingDir: $(workspaces.source.path)
          workspaces:
            - mountPath: /workspace/source/go/src/github.com/GoogleContainerTools/skaffold
              name: source
        workspaces:
          - name: source
            workspace: git-source
      - name: build-skaffold-web
        params:
          - name: IMAGE
            value: $(params.image-registry)/leeroy-web
          - name: CONTEXT
            value: examples/microservices/leeroy-web
          - name: DOCKERFILE
            value: $(workspaces.source.path)/examples/microservices/leeroy-web/Dockerfile
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        runAfter:
          - skaffold-unit-tests
        taskSpec:
          metadata: {}
          params:
            - description: Name (reference) of the image to build.
              name: IMAGE
              type: string
            - default: ./Dockerfile
              description: Path to the Dockerfile to build.
              name: DOCKERFILE
              type: string
            - default: ./
              description: The build context used by Kaniko.
              name: CONTEXT
              type: string
            - default: ""
              name: EXTRA_ARGS
              type: string
            - default: gcr.io/kaniko-project/executor:latest
              description: The image on which builds will run
              name: BUILDER_IMAGE
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          results:
            - description: Digest of the image just built.
              name: IMAGE_DIGEST
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - command:
                - /kaniko/executor
                - $(params.EXTRA_ARGS)
                - --dockerfile=$(params.DOCKERFILE)
                - --context=$(workspaces.source.path)/$(params.CONTEXT)
                - --destination=$(params.IMAGE)
                - --oci-layout-path=$(workspaces.source.path)/$(params.CONTEXT)/image-digest
              computeResources: {}
              env:
                - name: DOCKER_CONFIG
                  value: /tekton/home/.docker
              image: $(params.BUILDER_IMAGE)
              name: build-and-push
              securityContext:
                runAsUser: 0
              workingDir: $(workspaces.source.path)
            - args:
                - -images=[{"name":"$(params.IMAGE)","type":"image","url":"$(params.IMAGE)","digest":"","OutputImageDir":"$(workspaces.source.path)/$(params.CONTEXT)/image-digest"}]
                - -terminationMessagePath=$(params.CONTEXT)/image-digested
              command:
                - /ko-app/imagedigestexporter
              computeResources: {}
              image: ko://github.com/tektoncd/pipeline/cmd/imagedigestexporter
              name: write-digest
              securityContext:
                runAsUser: 0
              workingDir: $(workspaces.source.path)
            - computeResources: {}
              image: stedolan/jq
              name: digest-to-results
              script: cat $(params.CONTEXT)/image-digested | jq '.[0].value' -rj | tee /tekton/results/IMAGE_DIGEST
              workingDir: $(workspaces.source.path)
          workspaces:
            - name: source
        workspaces:
          - name: source
            workspace: git-source
      - name: build-skaffold-app
        params:
          - name: IMAGE
            value: $(params.image-registry)/leeroy-app
          - name: CONTEXT
            value: examples/microservices/leeroy-app
          - name: DOCKERFILE
            value: $(workspaces.source.path)/examples/microservices/leeroy-app/Dockerfile
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        runAfter:
          - skaffold-unit-tests
        taskSpec:
          metadata: {}
          params:
            - description: Name (reference) of the image to build.
              name: IMAGE
              type: string
            - default: ./Dockerfile
              description: Path to the Dockerfile to build.
              name: DOCKERFILE
              type: string
            - default: ./
              description: The build context used by Kaniko.
              name: CONTEXT
              type: string
            - default: ""
              name: EXTRA_ARGS
              type: string
            - default: gcr.io/kaniko-project/executor:latest
              description: The image on which builds will run
              name: BUILDER_IMAGE
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          results:
            - description: Digest of the image just built.
              name: IMAGE_DIGEST
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - command:
                - /kaniko/executor
                - $(params.EXTRA_ARGS)
                - --dockerfile=$(params.DOCKERFILE)
                - --context=$(workspaces.source.path)/$(params.CONTEXT)
                - --destination=$(params.IMAGE)
                - --oci-layout-path=$(workspaces.source.path)/$(params.CONTEXT)/image-digest
              computeResources: {}
              env:
                - name: DOCKER_CONFIG
                  value: /tekton/home/.docker
              image: $(params.BUILDER_IMAGE)
              name: build-and-push
              securityContext:
                runAsUser: 0
              workingDir: $(workspaces.source.path)
            - args:
                - -images=[{"name":"$(params.IMAGE)","type":"image","url":"$(params.IMAGE)","digest":"","OutputImageDir":"$(workspaces.source.path)/$(params.CONTEXT)/image-digest"}]
                - -terminationMessagePath=$(params.CONTEXT)/image-digested
              command:
                - /ko-app/imagedigestexporter
              computeResources: {}
              image: ko://github.com/tektoncd/pipeline/cmd/imagedigestexporter
              name: write-digest
              securityContext:
                runAsUser: 0
              workingDir: $(workspaces.source.path)
            - computeResources: {}
              image: stedolan/jq
              name: digest-to-results
              script: cat $(params.CONTEXT)/image-digested | jq '.[0].value' -rj | tee /tekton/results/IMAGE_DIGEST
              workingDir: $(workspaces.source.path)
          workspaces:
            - name: source
        workspaces:
          - name: source
            workspace: git-source
      - name: deploy-app
        params:
          - name: imageURL
            value: $(params.image-registry)/leeroy-app@$(tasks.build-skaffold-app.results.IMAGE_DIGEST)
          - name: path
            value: $(workspaces.source.path)/examples/microservices/leeroy-app/kubernetes/deployment.yaml
          - name: yqArg
            value: -d1
          - name: yamlPathToImage
            value: spec.template.spec.containers[0].image
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: Path to the manifest to apply
              name: path
              type: string
            - description: Okay this is a hack, but I didn't feel right hard-coding `-d1` down below
              name: yqArg
              type: string
            - description: The path to the image to replace in the yaml manifest (arg to yq)
              name: yamlPathToImage
              type: string
            - description: The URL of the image to deploy
              name: imageURL
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - args:
                - w
                - -i
                - $(params.yqArg)
                - $(params.path)
                - $(params.yamlPathToImage)
                - $(params.imageURL)
              command:
                - yq
              computeResources: {}
              image: mikefarah/yq
              name: replace-image
            - args:
                - apply
                - -f
                - $(params.path)
              command:
                - kubectl
              computeResources: {}
              image: lachlanevenson/k8s-kubectl
              name: run-kubectl
          workspaces:
            - name: source
        workspaces:
          - name: source
            workspace: git-source
      - name: deploy-web
        params:
          - name: imageURL
            value: $(params.image-registry)/leeroy-web@$(tasks.build-skaffold-web.results.IMAGE_DIGEST)
          - name: path
            value: $(workspaces.source.path)/examples/microservices/leeroy-web/kubernetes/deployment.yaml
          - name: yqArg
            value: -d1
          - name: yamlPathToImage
            value: spec.template.spec.containers[0].image
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: Path to the manifest to apply
              name: path
              type: string
            - description: Okay this is a hack, but I didn't feel right hard-coding `-d1` down below
              name: yqArg
              type: string
            - description: The path to the image to replace in the yaml manifest (arg to yq)
              name: yamlPathToImage
              type: string
            - description: The URL of the image to deploy
              name: imageURL
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - args:
                - w
                - -i
                - $(params.yqArg)
                - $(params.path)
                - $(params.yamlPathToImage)
                - $(params.imageURL)
              command:
                - yq
              computeResources: {}
              image: mikefarah/yq
              name: replace-image
            - args:
                - apply
                - -f
                - $(params.path)
              command:
                - kubectl
              computeResources: {}
              image: lachlanevenson/k8s-kubectl
              name: run-kubectl
          workspaces:
            - name: source
        workspaces:
          - name: source
            workspace: git-source
    workspaces:
      - name: git-source
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    lighthouse.jenkins-x.io/loadFileRefs: .*
  creationTimestamp: null
  name: demo-pipeline
spec:
  pipelineSpec:
    params:
      - default: gcr.io/christiewilson-catfactory
        name: image-registry
        type: string
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: fetch-from-git
        params:
          - name: url
            value: https://github.com/GoogleContainerTools/skaffold
          - name: revision
            value: v0.32.0
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: git url to clone
              name: url
              type: string
            - default: master
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: revision
              type: string
            - default: "true"
              description: defines if the resource should initialize and fetch the submodules
              name: submodules
              type: string
            - default: "1"
              description: performs a shallow clone where only the most recent commit(s) will be fetched
              name: depth
              type: string
            - default: "true"
              description: defines if http.sslVerify should be set to true or false in the global git config
              name: sslVerify
              type: string
            - default: ""
              description: subdirectory inside the "output" workspace to clone the git repo into
              name: subdirectory
              type: string
            - default: "false"
              description: clean out the contents of the repo's destination directory (if it already exists) before trying to clone the repo there
              name: deleteExisting
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          results:
            - description: The precise commit SHA that was fetched by this Task
              name: commit
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              image: ko://github.com/tektoncd/pipeline/cmd/git-init
              name: clone
              script: |-
                CHECKOUT_DIR="$(workspaces.output.path)/$(params.subdirectory)"
                cleandir() {
                  # Delete any existing contents of the repo directory if it exists.
                  #
                  # We don't just "rm -rf $CHECKOUT_DIR" because $CHECKOUT_DIR might be "/"
                  # or the root of a mounted volume.
                  if [[ -d "$CHECKOUT_DIR" ]] ; then
                    # Delete non-hidden files and directories
                    rm -rf "$CHECKOUT_DIR"/*
                    # Delete files and directories starting with . but excluding ..
                    rm -rf "$CHECKOUT_DIR"/.[!.]*
                    # Delete files and directories starting with .. plus any other character
                    rm -rf "$CHECKOUT_DIR"/..?*
                  fi
                }
                if [[ "$(params.deleteExisting)" == "true" ]] ; then
                  cleandir
                fi
                /ko-app/git-init \
                  -url "$(params.url)" \
                  -revision "$(params.revision)" \
                  -path "$CHECKOUT_DIR" \
                  -sslVerify="$(params.sslVerify)" \
                  -submodules="$(params.submodules)" \
                  -depth="$(params.depth)"
                cd "$CHECKOUT_DIR"
                RESULT_SHA="$(git rev-parse HEAD | tr -d '\n')"
                EXIT_CODE="$?"
                if [ "$EXIT_CODE" != 0 ]
                then
                  exit $EXIT_CODE
                fi
                # Make sure we don't add a trailing newline to the result!
                echo -n "$RESULT_SHA" > $(results.commit.path)
          workspaces:
            - description: The git repo will be cloned onto the volume backing this workspace
              name: output
        workspaces:
          - name: output
            workspace: git-source
      - name: skaffold-unit-tests
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        runAfter:
          - fetch-from-git
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              env:
                - name: GOPATH
                  value: /workspace/go
              image: golang
              name: run-tests
              script: |-
                # The intention behind this example Task is to run unit test, however we
                # currently do nothing to ensure that a unit test issue doesn't cause this example
                # to fail unnecessarily. In the future we could re-introduce the unit tests (since
                # we are now pinning the version of Skaffold we pull) or use Tekton Pipelines unit tests.
                echo "pass"
              workingDir: $(workspaces.source.path)
          workspaces:
            - mountPath: /workspace/source/go/src/github.com/GoogleContainerTools/skaffold
              name: source
        workspaces:
          - name: source
            workspace: git-source
      - name: build-skaffold-web
        params:
          - name: IMAGE
            value: $(params.image-registry)/leeroy-web
          - name: CONTEXT
            value: examples/microservices/leeroy-web
          - name: DOCKERFILE
            value: $(workspaces.source.path)/examples/microservices/leeroy-web/Dockerfile
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        runAfter:
          - skaffold-unit-tests
        taskSpec:
          metadata: {}
          params:
            - description: Name (reference) of the image to build.
              name: IMAGE
              type: string
            - default: ./Dockerfile
              description: Path to the Dockerfile to build.
              name: DOCKERFILE
              type: string
            - default: ./
              description: The build context used by Kaniko.
              name: CONTEXT
              type: string
            - default: ""
              name: EXTRA_ARGS
              type: string
            - default: gcr.io/kaniko-project/executor:latest
              description: The image on which builds will run
              name: BUILDER_IMAGE
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          results:
            - description: Digest of the image just built.
              name: IMAGE_DIGEST
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - command:
                - /kaniko/executor
                - $(params.EXTRA_ARGS)
                - --dockerfile=$(params.DOCKERFILE)
                - --context=$(workspaces.source.path)/$(params.CONTEXT)
                - --destination=$(params.IMAGE)
                - --oci-layout-path=$(workspaces.source.path)/$(params.CONTEXT)/image-digest
              computeResources: {}
              env:
                - name: DOCKER_CONFIG
                  value: /tekton/home/.docker
              image: $(params.BUILDER_IMAGE)
              name: build-and-push
              securityContext:
                runAsUser: 0
              workingDir: $(workspaces.source.path)
            - args:
                - -images=[{"name":"$(params.IMAGE)","type":"image","url":"$(params.IMAGE)","digest":"","OutputImageDir":"$(workspaces.source.path)/$(params.CONTEXT)/image-digest"}]
                - -terminationMessagePath=$(params.CONTEXT)/image-digested
              command:
                - /ko-app/imagedigestexporter
              computeResources: {}
              image: ko://github.com/tektoncd/pipeline/cmd/imagedigestexporter
              name: write-digest
              securityContext:
                runAsUser: 0
              workingDir: $(workspaces.source.path)
            - computeResources: {}
              image: stedolan/jq
              name: digest-to-results
              script: cat $(params.CONTEXT)/image-digested | jq '.[0].value' -rj | tee /tekton/results/IMAGE_DIGEST
              workingDir: $(workspaces.source.path)
          workspaces:
            - name: source
        workspaces:
          - name: source
            workspace: git-source
      - name: build-skaffold-app
        params:
          - name: IMAGE
            value: $(params.image-registry)/leeroy-app
          - name: CONTEXT
            value: examples/microservices/leeroy-app
          - name: DOCKERFILE
            value: $(workspaces.source.path)/examples/microservices/leeroy-app/Dockerfile
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        runAfter:
          - skaffold-unit-tests
        taskSpec:
          metadata: {}
          params:
            - description: Name (reference) of the image to build.
              name: IMAGE
              type: string
            - default: ./Dockerfile
              description: Path to the Dockerfile to build.
              name: DOCKERFILE
              type: string
            - default: ./
              description: The build context used by Kaniko.
              name: CONTEXT
              type: string
            - default: ""
              name: EXTRA_ARGS
              type: string
            - default: gcr.io/kaniko-project/executor:latest
              description: The image on which builds will run
              name: BUILDER_IMAGE
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          results:
            - description: Digest of the image just built.
              name: IMAGE_DIGEST
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - command:
                - /kaniko/executor
                - $(params.EXTRA_ARGS)
                - --dockerfile=$(params.DOCKERFILE)
                - --context=$(workspaces.source.path)/$(params.CONTEXT)
                - --destination=$(params.IMAGE)
                - --oci-layout-path=$(workspaces.source.path)/$(params.CONTEXT)/image-digest
              computeResources: {}
              env:
                - name: DOCKER_CONFIG
                  value: /tekton/home/.docker
              image: $(params.BUILDER_IMAGE)
              name: build-and-push
              securityContext:
                runAsUser: 0
              workingDir: $(workspaces.source.path)
            - args:
                - -images=[{"name":"$(params.IMAGE)","type":"image","url":"$(params.IMAGE)","digest":"","OutputImageDir":"$(workspaces.source.path)/$(params.CONTEXT)/image-digest"}]
                - -terminationMessagePath=$(params.CONTEXT)/image-digested
              command:
                - /ko-app/imagedigestexporter
              computeResources: {}
              image: ko://github.com/tektoncd/pipeline/cmd/imagedigestexporter
              name: write-digest
              securityContext:
                runAsUser: 0
              workingDir: $(workspaces.source.path)
            - computeResources: {}
              image: stedolan/jq
              name: digest-to-results
              script: cat $(params.CONTEXT)/image-digested | jq '.[0].value' -rj | tee /tekton/results/IMAGE_DIGEST
              workingDir: $(workspaces.source.path)
          workspaces:
            - name: source
        workspaces:
          - name: source
            workspace: git-source
      - name: deploy-app
        params:
          - name: imageURL
            value: $(params.image-registry)/leeroy-app@$(tasks.build-skaffold-app.results.IMAGE_DIGEST)
          - name: path
            value: $(workspaces.source.path)/examples/microservices/leeroy-app/kubernetes/deployment.yaml
          - name: yqArg
            value: -d1
          - name: yamlPathToImage
            value: spec.template.spec.containers[0].image
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: Path to the manifest to apply
              name: path
              type: string
            - description: Okay this is a hack, but I didn't feel right hard-coding `-d1` down below
              name: yqArg
              type: string
            - description: The path to the image to replace in the yaml manifest (arg to yq)
              name: yamlPathToImage
              type: string
            - description: The URL of the image to deploy
              name: imageURL
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - args:
                - w
                - -i
                - $(params.yqArg)
                - $(params.path)
                - $(params.yamlPathToImage)
                - $(params.imageURL)
              command:
                - yq
              computeResources: {}
              image: mikefarah/yq
              name: replace-image
            - args:
                - apply
                - -f
                - $(params.path)
              command:
                - kubectl
              computeResources: {}
              image: lachlanevenson/k8s-kubectl
              name: run-kubectl
          workspaces:
            - name: source
        workspaces:
          - name: source
            workspace: git-source
      - name: deploy-web
        params:
          - name: imageURL
            value: $(params.image-registry)/leeroy-web@$(tasks.build-skaffold-web.results.IMAGE_DIGEST)
          - name: path
            value: $(workspaces.source.path)/examples/microservices/leeroy-web/kubernetes/deployment.yaml
          - name: yqArg
            value: -d1
          - name: yamlPathToImage
            value: spec.template.spec.containers[0].image
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: Path to the manifest to apply
              name: path
              type: string
            - description: Okay this is a hack, but I didn't feel right hard-coding `-d1` down below
              name: yqArg
              type: string
            - description: The path to the image to replace in the yaml manifest (arg to yq)
              name: yamlPathToImage
              type: string
            - description: The URL of the image to deploy
              name: imageURL
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - args:
                - w
                - -i
                - $(params.yqArg)
                - $(params.path)
                - $(params.yamlPathToImage)
                - $(params.imageURL)
              command:
                - yq
              computeResources: {}
              image: mikefarah/yq
              name: replace-image
            - args:
                - apply
                - -f
                - $(params.path)
              command:
                - kubectl
              computeResources: {}
              image: lachlanevenson/k8s-kubectl
              name: run-kubectl
          workspaces:
            - name: source
        workspaces:
          - name: source
            workspace: git-source
    workspaces:
      - name: git-source
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: jx3-test-save-show-results
spec:
  params:
    - name: value_to_save
      value: ""
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - default: ""
        name: value_to_save
        type: string
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    results:
      - description: result_value
        name: result_value
        value: $(tasks.save-results.results.result_value)
    tasks:
      - name: save-results
        params:
          - name: value_to_save
            value: test_demo
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - default: ""
              name: value_to_save
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          results:
            - description: result_value
              name: result_value
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            imagePullPolicy: IfNotPresent
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: ubuntu:jammy
              name: save-result
              script: |
                #!/usr/bin/env sh
                set -ex
                result_value="$(params.value_to_save)"
                echo "results.result_value.path is $(results.result_value.path)"
                echo -n "${result_value}" > $(results.result_value.path)
                echo "result_value is ${result_value}"
      - name: display-results
        params:
          - name: value_to_show
            value: $(tasks.save-results.results.result_value)
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        runAfter:
          - save-results
        taskSpec:
          metadata: {}
          params:
            - default: ""
              name: value_to_show
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            imagePullPolicy: IfNotPresent
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: ubuntu:jammy
              name: show-result
              script: |
                #!/usr/bin/env sh
                set -ex
                value_to_show="$(params.value_to_show)"
                echo "value_to_show is ${value_to_show}"
  taskRunTemplate:
    podTemplate: {}
    serviceAccountName: tekton-bot
  timeouts:
    pipeline: 30m0s
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: pullrequest
spec:
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: git-clone-env-pr
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskRef:
          params:
            - name: url
              value: https://github.com/jenkins-x/jx3-pipeline-catalog.git
            - name: revision
              value: master
            - name: pathInRepo
              value: tasks/git-clone/git-clone-env-pr.yaml
          resolver: git
        workspaces:
          - name: output
            workspace: pipeline-ws
      - name: make-pr
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        runAfter:
          - git-clone-env-pr
        taskRef:
          params:
            - name: url
              value: https://github.com/jenkins-x/jx3-pipeline-catalog.git
            - name: revision
              value: master
            - name: pathInRepo
              value: tasks/environment/pullrequest/make-pr.yaml
          resolver: git
        workspaces:
          - name: output
            workspace: pipeline-ws
      - name: kubetest
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        runAfter:
          - make-pr
        taskRef:
          params:
            - name: url
              value: https://github.com/jenkins-x/jx3-pipeline-catalog.git
            - name: revision
              value: master
            - name: pathInRepo
              value: tasks/kubetest/environment.yaml
          resolver: git
        workspaces:
          - name: output
            workspace: pipeline-ws
    workspaces:
      - name: pipeline-ws
  taskRunTemplate:
    podTemplate: {}
    serviceAccountName: tekton-bot
  timeouts:
    pipeline: 12h0m0s
  workspaces:
    - name: pipeline-ws
      volumeClaimTemplate:
        metadata:
          creationTimestamp: null
        spec:
          accessModes:
            - ReadWriteOnce
          computeResources:
            requests:
              storage: 1Gi
        status: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    lighthouse.jenkins-x.io/cloneURI: https://github.com/jenkins-x/jx.git
  creationTimestamp: "2020-07-20T19:50:21Z"
  generation: 1
  labels:
    branch: PR-7463
    build: "17"
    context: boot-vault
    jenkins.io/pipelineType: build
    lighthouse.jenkins-x.io/baseSHA: c47ce72d4e2991a9440e6d954ecbf79d596f9352
    lighthouse.jenkins-x.io/branch: PR-7463
    lighthouse.jenkins-x.io/buildNum: "17"
    lighthouse.jenkins-x.io/context: boot-vault
    lighthouse.jenkins-x.io/id: f46327af-b47e-11ea-b797-9256b7b8d9b0
    lighthouse.jenkins-x.io/lastCommitSHA: 8a3c5f595cdc3162e46390c72a5d22fb9c89d1df
    lighthouse.jenkins-x.io/refs.org: jenkins-x
    lighthouse.jenkins-x.io/refs.repo: jx
    owner: jenkins-x
    repository: jx
    tekton.dev/pipeline: jenkins-x-jx-pr-7463-boot-vault-9mbgb-17
  name: jenkins-x-jx-pr-7463-boot-vault-9mbgb-17
  namespace: jx
  resourceVersion: "16726271"
  selfLink: /apis/tekton.dev/v1beta1/namespaces/jx/pipelineruns/jenkins-x-jx-pr-7463-boot-vault-9mbgb-17
  uid: 3edf18d1-cac2-11ea-a610-42010a8400cb
spec:
  params:
    - name: version
      value: 0.0.0-SNAPSHOT-PR-7463-17
    - name: build_id
      value: "17"
  pipelineRef:
    apiVersion: tekton.dev/v1beta1
    name: jenkins-x-jx-pr-7463-boot-vault-9mbgb-17
  taskRunTemplate:
    podTemplate: {}
    serviceAccountName: tekton-bot
  timeouts:
    pipeline: 240h0m0s
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    lighthouse.jenkins-x.io/loadFileRefs: .*
  creationTimestamp: null
  name: pipelinerun-with-extra-params
spec:
  params:
    - name: pl-param-x
      value: "100"
    - name: pl-param-y
      value: "200"
    - name: pl-param-z
      value: "300"
  pipelineSpec:
    params:
      - name: pl-param-x
        type: string
      - name: pl-param-y
        type: string
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: add-params
        params:
          - name: a
            value: $(params.pl-param-x)
          - name: b
            value: $(params.pl-param-y)
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: The first integer
              name: a
              type: string
            - description: The second integer
              name: b
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              image: bash:latest
              name: sum
              script: |-
                #!/usr/bin/env bash
                echo -n $(( "$(inputs.params.a)" + "$(inputs.params.b)" ))
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    lighthouse.jenkins-x.io/appendStepsURL: https://gist.githubusercontent.com/jstrachan/1937a809fd4223f3588db32cbb3a034f/raw/3bb56dd20cae2795e0ec4788d79e18d9486da9d9/sample-git-clone-task.yaml
  creationTimestamp: null
  name: cheese
spec:
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: cheese
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              image: some/linter:1.2.3
              name: lint
              workingDir: /workspace/source
            - computeResources: {}
              image: gcr.io/jenkinsxio/builder-jx:2.1.142-761
              name: git-clone
              script: |
                #!/usr/bin/env bash
                export SUBDIR="source"
                echo "git cloning url: $REPO_URL version $PULL_PULL_SHA to dir: $SUBDIR"
                git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot}
                git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com}
                git config --global credential.helper store
                git clone $REPO_URL $SUBDIR
                cd $SUBDIR
                git checkout $PULL_PULL_SHA
                echo "checked out revision: $PULL_PULL_SHA to dir: $SUBDIR"
              workingDir: /workspace
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    lighthouse.jenkins-x.io/defaultParameters: "false"
  creationTimestamp: null
  name: cheese
spec:
  pipelineSpec:
    tasks:
      - name: cheese
        taskSpec:
          metadata: {}
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            volumeMounts:
              - mountPath: /home/jenkins
                name: workspace-volume
              - mountPath: /etc/podinfo
                name: podinfo
                readOnly: true
            workingDir: /workspace/source
          steps:
            - args:
                - -c
                - 'mkdir -p $HOME; git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot}; git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com}; git config --global credential.helper store; git clone $(params.REPO_URL) $(params.subdirectory); echo cloned url: $(params.REPO_URL) to dir: $(params.subdirectory); cd $(params.subdirectory); git checkout $(params.PULL_PULL_SHA); echo checked out revision: $(params.PULL_PULL_SHA) to dir: $(params.subdirectory)'
              command:
                - /bin/sh
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-jx:2.1.142-761
              name: git-clone
              workingDir: /workspace
            - args:
                - gitops
                - git
                - setup
                - --namespace
                - jx-git-operator
              command:
                - jx
              computeResources: {}
              image: gcr.io/jenkinsxio/jx-cli:latest
              name: git-setup
              workingDir: /workspace
            - args:
                - '[ -d /builder/home ] || mkdir -p /builder && ln -s /tekton/home /builder/home'
              command:
                - /bin/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-jx:2.1.142-761
              name: setup-builder-home
            - args:
                - step
                - git
                - merge
                - --verbose
                - --baseSHA
                - $(params.PULL_BASE_SHA)
                - --sha
                - $(params.PULL_PULL_SHA)
                - --baseBranch
                - $(params.PULL_BASE_REF)
              command:
                - jx
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-jx:2.1.142-761
              name: git-merge
            - args:
                - gitops
                - variables
              command:
                - jx
              computeResources: {}
              image: gcr.io/jenkinsxio/jx-cli:latest
              name: jx-variables
            - args:
                - jx step credential -s npm-token -k file -f /builder/home/.npmrc --optional=true
              command:
                - /bin/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-nodejs:2.1.150-769
              name: build-npmrc
            - args:
                - npm install
              command:
                - /bin/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-nodejs:2.1.150-769
              name: build-npm-install
            - args:
                - CI=true DISPLAY=:99 npm test
              command:
                - /bin/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-nodejs:2.1.150-769
              name: build-npm-test
            - args:
                - source .jx/variables.sh && cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json && /kaniko/executor $KANIKO_FLAGS --cache=true --cache-dir=/workspace --context=/workspace/source --dockerfile=/workspace/source/Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION --cache-repo=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/cache
              command:
                - /busybox/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/kaniko:0.0.5
              name: build-container-build
            - args:
                - source /workspace/source/.jx/variables.sh && jx preview create
              command:
                - /bin/bash
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/jx-cli:latest
              name: promote-jx-preview
          volumes:
            - emptyDir: {}
              name: workspace-volume
            - downwardAPI:
                items:
                  - fieldRef:
                      fieldPath: metadata.labels
                    path: labels
              name: podinfo
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: REPO_URL
      value: ""
    - name: PULL_PULL_SHA
      value: master
    - name: subdirectory
      value: source
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: master
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
  pipelineSpec:
    params:
      - description: git url to clone
        name: REPO_URL
        type: string
      - default: master
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - default: source
        description: subdirectory inside of /workspace to clone the git repo
        name: subdirectory
        type: string
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: 'the kind of job: postsubmit or presubmit'
        name: JOB_TYPE
        type: string
      - default: master
        description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
    tasks:
      - name: cheese
        params:
          - name: REPO_URL
            value: $(params.REPO_URL)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: subdirectory
            value: $(params.subdirectory)
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
        taskSpec:
          metadata: {}
          params:
            - description: git url to clone
              name: REPO_URL
              type: string
            - default: master
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - default: source
              description: subdirectory inside of /workspace to clone the git repo
              name: subdirectory
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: 'the kind of job: postsubmit or presubmit'
              name: JOB_TYPE
              type: string
            - default: master
              description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            volumeMounts:
              - mountPath: /home/jenkins
                name: workspace-volume
              - mountPath: /etc/podinfo
                name: podinfo
                readOnly: true
            workingDir: /workspace/source
          steps:
            - args:
                - -c
                - 'mkdir -p $HOME; git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot}; git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com}; git config --global credential.helper store; git clone $(params.REPO_URL) $(params.subdirectory); echo cloned url: $(params.REPO_URL) to dir: $(params.subdirectory); cd $(params.subdirectory); git checkout $(params.PULL_PULL_SHA); echo checked out revision: $(params.PULL_PULL_SHA) to dir: $(params.subdirectory)'
              command:
                - /bin/sh
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-jx:2.1.142-761
              name: git-clone
              workingDir: /workspace
            - args:
                - gitops
                - git
                - setup
                - --namespace
                - jx-git-operator
              command:
                - jx
              computeResources: {}
              image: gcr.io/jenkinsxio/jx-cli:latest
              name: git-setup
              workingDir: /workspace
            - args:
                - '[ -d /builder/home ] || mkdir -p /builder && ln -s /tekton/home /builder/home'
              command:
                - /bin/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-jx:2.1.142-761
              name: setup-builder-home
            - args:
                - step
                - git
                - merge
                - --verbose
                - --baseSHA
                - $(params.PULL_BASE_SHA)
                - --sha
                - $(params.PULL_PULL_SHA)
                - --baseBranch
                - $(params.PULL_BASE_REF)
              command:
                - jx
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-jx:2.1.142-761
              name: git-merge
            - args:
                - gitops
                - variables
              command:
                - jx
              computeResources: {}
              image: gcr.io/jenkinsxio/jx-cli:latest
              name: jx-variables
            - args:
                - jx step credential -s npm-token -k file -f /builder/home/.npmrc --optional=true
              command:
                - /bin/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-nodejs:2.1.150-769
              name: build-npmrc
            - args:
                - npm install
              command:
                - /bin/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-nodejs:2.1.150-769
              name: build-npm-install
            - args:
                - CI=true DISPLAY=:99 npm test
              command:
                - /bin/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-nodejs:2.1.150-769
              name: build-npm-test
            - args:
                - source .jx/variables.sh && cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json && /kaniko/executor $KANIKO_FLAGS --cache=true --cache-dir=/workspace --context=/workspace/source --dockerfile=/workspace/source/Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION --cache-repo=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/cache
              command:
                - /busybox/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/kaniko:0.0.5
              name: build-container-build
            - args:
                - source /workspace/source/.jx/variables.sh && jx preview create
              command:
                - /bin/bash
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/jx-cli:latest
              name: promote-jx-preview
          volumes:
            - emptyDir: {}
              name: workspace-volume
            - downwardAPI:
                items:
                  - fieldRef:
                      fieldPath: metadata.labels
                    path: labels
              name: podinfo
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    lighthouse.jenkins-x.io/prependStepsURL: https://gist.githubusercontent.com/jstrachan/1937a809fd4223f3588db32cbb3a034f/raw/3bb56dd20cae2795e0ec4788d79e18d9486da9d9/sample-git-clone-task.yaml
  creationTimestamp: null
  name: cheese
spec:
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: cheese
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              image: gcr.io/jenkinsxio/builder-jx:2.1.142-761
              name: git-clone
              script: |
                #!/usr/bin/env bash
                export SUBDIR="source"
                echo "git cloning url: $REPO_URL version $PULL_PULL_SHA to dir: $SUBDIR"
                git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot}
                git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com}
                git config --global credential.helper store
                git clone $REPO_URL $SUBDIR
                cd $SUBDIR
                git checkout $PULL_PULL_SHA
                echo "checked out revision: $PULL_PULL_SHA to dir: $SUBDIR"
              workingDir: /workspace
            - computeResources: {}
              image: some/linter:1.2.3
              name: lint
              workingDir: /workspace/source
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  pipelineSpec:
    params:
      - default: param-value
        name: PARAM
        type: string
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: cheese
        params:
          - name: PARAM
            value: $(params.PARAM)
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - default: param-value
              name: PARAM
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              image: ubuntu
              name: noshebang
              script: echo "no shebang"
            - computeResources: {}
              env:
                - name: FOO
                  value: foooooooo
              image: ubuntu
              name: bash
              script: |
                #!/usr/bin/env bash
                set -euxo pipefail
                echo "Hello from Bash!"
                echo FOO is ${FOO}
                echo substring is ${FOO:2:4}
                for i in {1..10}; do
                  echo line $i
                done
            - computeResources: {}
              image: ubuntu
              name: place-file
              script: |
                #!/usr/bin/env bash
                echo "echo Hello from script file" > /workspace/hello
                chmod +x /workspace/hello
            - computeResources: {}
              image: ubuntu
              name: run-file
              script: |
                #!/usr/bin/env bash
                /workspace/hello
            - computeResources: {}
              image: ubuntu
              name: contains-eof
              script: |
                #!/usr/bin/env bash
                cat > file << EOF
                this file has some contents
                EOF
                cat file
            - computeResources: {}
              image: node
              name: node
              script: |
                #!/usr/bin/env node
                console.log("Hello from Node!")
            - computeResources: {}
              image: python
              name: python
              script: |
                #!/usr/bin/env python3
                print("Hello from Python!")
            - computeResources: {}
              image: perl
              name: perl
              script: |
                #!/usr/bin/perl
                print "Hello from Perl!"
            - computeResources: {}
              image: python
              name: params-applied
              script: |
                #!/usr/bin/env python3
                v = '$(params.PARAM)'
                if v != 'param-value':
                  print('Param values not applied')
                  print('Got: ', v)
                  exit(1)
            - args:
                - hello
                - world
              computeResources: {}
              image: ubuntu
              name: args-allowed
              script: |-
                #!/usr/bin/env bash
                [[ $# == 2 ]]
                [[ $1 == "hello" ]]
                [[ $2 == "world" ]]
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: cheese
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            volumeMounts:
              - mountPath: /home/jenkins
                name: workspace-volume
              - mountPath: /etc/podinfo
                name: podinfo
                readOnly: true
            workingDir: /workspace/source
          steps:
            - args:
                - -c
                - mkdir -p $HOME; git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot}; git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com}; git config --global credential.helper store; git clone $REPO_URL
              command:
                - /bin/sh
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-jx:2.1.142-761
              name: git-clone
              workingDir: /workspace
            - args:
                - gitops
                - git
                - setup
                - --namespace
                - jx-git-operator
              command:
                - jx
              computeResources: {}
              image: gcr.io/jenkinsxio/jx-cli:latest
              name: git-setup
              workingDir: /workspace
            - args:
                - '[ -d /builder/home ] || mkdir -p /builder && ln -s /tekton/home /builder/home'
              command:
                - /bin/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-jx:2.1.142-761
              name: setup-builder-home
            - args:
                - step
                - git
                - merge
              command:
                - jx
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-jx:2.1.142-761
              name: git-merge
            - args:
                - gitops
                - variables
              command:
                - jx
              computeResources: {}
              image: gcr.io/jenkinsxio/jx-cli:latest
              name: jx-variables
            - args:
                - jx step credential -s npm-token -k file -f /builder/home/.npmrc --optional=true
              command:
                - /bin/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-nodejs:2.1.150-769
              name: build-npmrc
            - args:
                - npm install
              command:
                - /bin/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-nodejs:2.1.150-769
              name: build-npm-install
            - args:
                - CI=true DISPLAY=:99 npm test
              command:
                - /bin/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/builder-nodejs:2.1.150-769
              name: build-npm-test
            - args:
                - source .jx/variables.sh && cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json && /kaniko/executor $KANIKO_FLAGS --cache=true --cache-dir=/workspace --context=/workspace/source --dockerfile=/workspace/source/Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION --cache-repo=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/cache
              command:
                - /busybox/sh
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/kaniko:0.0.5
              name: build-container-build
            - args:
                - source /workspace/source/.jx/variables.sh && jx preview create
              command:
                - /bin/bash
                - -c
              computeResources: {}
              image: gcr.io/jenkinsxio/jx-cli:latest
              name: promote-jx-preview
          volumes:
            - emptyDir: {}
              name: workspace-volume
            - downwardAPI:
                items:
                  - fieldRef:
                      fieldPath: metadata.labels
                    path: labels
              name: podinfo
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.19.0
              name: git-clone
              script: |
                #!/bin/sh
                export SUBDIR="source"
                echo "git cloning url: $REPO_URL version $PULL_PULL_SHA to dir: $SUBDIR"
                git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot}
                git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com}
                git config --global credential.helper store
                git clone $REPO_URL $SUBDIR
                cd $SUBDIR
                git checkout $PULL_PULL_SHA
                echo "checked out revision: $PULL_PULL_SHA to dir: $SUBDIR"
              workingDir: /workspace
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.62
              name: git-merge
              script: |
                #!/usr/bin/env sh
                jx gitops git merge variables
              workingDir: /workspace/source
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm test
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: params
spec:
  params:
    - name: FOO
      value: BAR-CATALOG
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - default: BAR-CATALOG
        name: FOO
        type: string
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: test-params
        params:
          - name: FOO
            value: $(params.FOO)
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - default: BAR-CATALOG
              name: FOO
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: FOO
                value: $(params.FOO)
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              image: gcr.io/cloud-builders/kubectl@sha256:8ab94be8b2b4f3d117f02d868b39540fddd225447abf4014f7ba4765cb39f753
              name: test-echo
              script: |-
                #!/usr/bin/env bash
                echo "FOO: $(params.FOO)"
  taskRunTemplate:
    podTemplate: {}
    serviceAccountName: tekton-bot
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: params
spec:
  params:
    - name: FOO
      value: BAR-CATALOG
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - default: BAR-CATALOG
        name: FOO
        type: string
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: test-params
        params:
          - name: FOO
            value: $(params.FOO)
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - default: BAR-CATALOG
              name: FOO
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
              - name: FOO
                value: $(params.FOO)
          steps:
            - computeResources: {}
              image: gcr.io/cloud-builders/kubectl@sha256:8ab94be8b2b4f3d117f02d868b39540fddd225447abf4014f7ba4765cb39f753
              name: test-echo
              script: |-
                #!/usr/bin/env bash
                echo "FOO: $(params.FOO)"
  taskRunTemplate:
    podTemplate: {}
    serviceAccountName: tekton-bot
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              env:
                - name: FOO
                  value: foo
              image: common-image
              name: common-build
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources: {}
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
          steps:
            - computeResources: {}
              env:
                - name: FOO
                  value: one
              image: common-image
              name: common-build
  taskRunTemplate: {}
  timeouts:
    pipeline: 240h0m0s
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: node:12-slim
              name: my-first-step
              script: |
                #!/bin/sh
                npm first thing
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm test
            - computeResources: {}
              image: node:12-slim
              name: my-pre-build-container
              script: |
                #!/bin/sh
                npm pre build container
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
            - computeResources: {}
              image: node:12-slim
              name: my-final-step
              script: |
                #!/bin/sh
                npm final thing
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: node:12-slim
              name: my-first-step
              script: |
                #!/bin/sh
                npm first thing
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm test
            - computeResources: {}
              image: node:12-slim
              name: my-pre-build-container
              script: |
                #!/bin/sh
                npm pre build container
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
            - computeResources: {}
              image: node:12-slim
              name: my-final-step
              script: |
                #!/bin/sh
                npm final thing
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: url
      value: ""
    - name: revision
      value: ""
    - name: refspec
      value: ""
    - name: submodules
      value: "true"
    - name: depth
      value: "1"
    - name: sslVerify
      value: "true"
    - name: subdirectory
      value: ""
    - name: deleteExisting
      value: "true"
    - name: httpProxy
      value: ""
    - name: httpsProxy
      value: ""
    - name: noProxy
      value: ""
    - name: verbose
      value: "true"
    - name: gitInitImage
      value: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.18.1
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: git url to clone
        name: url
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: revision
        type: string
      - default: ""
        description: (optional) git refspec to fetch before checking out revision
        name: refspec
        type: string
      - default: "true"
        description: defines if the resource should initialize and fetch the submodules
        name: submodules
        type: string
      - default: "1"
        description: performs a shallow clone where only the most recent commit(s) will be fetched
        name: depth
        type: string
      - default: "true"
        description: defines if http.sslVerify should be set to true or false in the global git config
        name: sslVerify
        type: string
      - default: ""
        description: subdirectory inside the "output" workspace to clone the git repo into
        name: subdirectory
        type: string
      - default: "true"
        description: clean out the contents of the repo's destination directory (if it already exists) before trying to clone the repo there
        name: deleteExisting
        type: string
      - default: ""
        description: git HTTP proxy server for non-SSL requests
        name: httpProxy
        type: string
      - default: ""
        description: git HTTPS proxy server for SSL requests
        name: httpsProxy
        type: string
      - default: ""
        description: git no proxy - opt out of proxying HTTP/HTTPS requests
        name: noProxy
        type: string
      - default: "true"
        description: log the commands used during execution
        name: verbose
        type: string
      - default: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.18.1
        description: the image used where the git-init binary is
        name: gitInitImage
        type: string
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    results:
      - description: The precise commit SHA that was fetched by this Task
        name: commit
        value: $(tasks.from-build-pack.results.commit)
      - description: The precise URL that was fetched by this Task
        name: url
        value: $(tasks.from-build-pack.results.url)
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
            - description: git url to clone
              name: url
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: revision
              type: string
            - default: ""
              description: (optional) git refspec to fetch before checking out revision
              name: refspec
              type: string
            - default: "true"
              description: defines if the resource should initialize and fetch the submodules
              name: submodules
              type: string
            - default: "1"
              description: performs a shallow clone where only the most recent commit(s) will be fetched
              name: depth
              type: string
            - default: "true"
              description: defines if http.sslVerify should be set to true or false in the global git config
              name: sslVerify
              type: string
            - default: ""
              description: subdirectory inside the "output" workspace to clone the git repo into
              name: subdirectory
              type: string
            - default: "true"
              description: clean out the contents of the repo's destination directory (if it already exists) before trying to clone the repo there
              name: deleteExisting
              type: string
            - default: ""
              description: git HTTP proxy server for non-SSL requests
              name: httpProxy
              type: string
            - default: ""
              description: git HTTPS proxy server for SSL requests
              name: httpsProxy
              type: string
            - default: ""
              description: git no proxy - opt out of proxying HTTP/HTTPS requests
              name: noProxy
              type: string
            - default: "true"
              description: log the commands used during execution
              name: verbose
              type: string
            - default: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.18.1
              description: the image used where the git-init binary is
              name: gitInitImage
              type: string
          results:
            - description: The precise commit SHA that was fetched by this Task
              name: commit
            - description: The precise URL that was fetched by this Task
              name: url
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            volumeMounts:
              - mountPath: /tekton/home/npm
                name: npmrc
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              env:
                - name: PARAM_URL
                  value: $(params.url)
                - name: PARAM_REVISION
                  value: $(params.revision)
                - name: PARAM_REFSPEC
                  value: $(params.refspec)
                - name: PARAM_SUBMODULES
                  value: $(params.submodules)
                - name: PARAM_DEPTH
                  value: $(params.depth)
                - name: PARAM_SSL_VERIFY
                  value: $(params.sslVerify)
                - name: PARAM_SUBDIRECTORY
                  value: $(params.subdirectory)
                - name: PARAM_DELETE_EXISTING
                  value: $(params.deleteExisting)
                - name: PARAM_HTTP_PROXY
                  value: $(params.httpProxy)
                - name: PARAM_HTTPS_PROXY
                  value: $(params.httpsProxy)
                - name: PARAM_NO_PROXY
                  value: $(params.noProxy)
                - name: PARAM_VERBOSE
                  value: $(params.verbose)
                - name: WORKSPACE_OUTPUT_PATH
                  value: $(workspaces.output.path)
              image: $(params.gitInitImage)
              name: clone
              script: |
                #!/bin/sh
                set -eu -o pipefail

                if [[ "${PARAM_VERBOSE}" == "true" ]] ; then
                  set -x
                fi

                CHECKOUT_DIR="${WORKSPACE_OUTPUT_PATH}/${PARAM_SUBDIRECTORY}"

                cleandir() {
                  # Delete any existing contents of the repo directory if it exists.
                  #
                  # We don't just "rm -rf $CHECKOUT_DIR" because $CHECKOUT_DIR might be "/"
                  # or the root of a mounted volume.
                  if [[ -d "$CHECKOUT_DIR" ]] ; then
                    # Delete non-hidden files and directories
                    rm -rf "$CHECKOUT_DIR"/*
                    # Delete files and directories starting with . but excluding ..
                    rm -rf "$CHECKOUT_DIR"/.[!.]*
                    # Delete files and directories starting with .. plus any other character
                    rm -rf "$CHECKOUT_DIR"/..?*
                  fi
                }

                if [[ "${PARAM_DELETE_EXISTING}" == "true" ]] ; then
                  cleandir
                fi

                test -z "${PARAM_HTTP_PROXY}" || export HTTP_PROXY="${PARAM_HTTP_PROXY}"
                test -z "${PARAM_HTTPS_PROXY}" || export HTTPS_PROXY="${PARAM_HTTPS_PROXY}"
                test -z "${PARAM_NO_PROXY}" || export NO_PROXY="${PARAM_NO_PROXY}"

                /ko-app/git-init \
                  -url "${PARAM_URL}" \
                  -revision "${PARAM_REVISION}" \
                  -refspec "${PARAM_REFSPEC}" \
                  -path "$CHECKOUT_DIR" \
                  -sslVerify="${PARAM_SSL_VERIFY}" \
                  -submodules="${PARAM_SUBMODULES}" \
                  -depth "${PARAM_DEPTH}"
                cd "$CHECKOUT_DIR"
                RESULT_SHA="$(git rev-parse HEAD)"
                EXIT_CODE="$?"
                if [ "$EXIT_CODE" != 0 ] ; then
                  exit $EXIT_CODE
                fi
                # ensure we don't add a trailing newline to the result
                echo -n "$RESULT_SHA" > $(results.commit.path)
                echo -n "${PARAM_URL}" > $(results.url.path)
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm test
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
          volumes:
            - name: npmrc
              secret:
                optional: true
                secretName: npmrc
          workspaces:
            - description: The git repo will be cloned onto the volume backing this workspace
              name: output
        workspaces:
          - name: output
            workspace: output
    workspaces:
      - description: The git repo will be cloned onto the volume backing this workspace
        name: output
  taskRunTemplate: {}
  timeouts:
    pipeline: 24h0m0s
  workspaces:
    - emptyDir: {}
      name: output
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            volumeMounts:
              - mountPath: /tekton/home/npm
                name: npmrc
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm test
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
          volumes:
            - name: npmrc
              secret:
                optional: true
                secretName: npmrc
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            volumeMounts:
              - mountPath: /tekton/home/npm
                name: npmrc
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm test
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
          volumes:
            - name: npmrc
              secret:
                optional: true
                secretName: npmrc
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          sidecars:
            - computeResources: {}
              env:
                - name: START_XVFB
                  value: "false"
              image: selenium/standalone-chrome
              name: selenium
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            volumeMounts:
              - mountPath: /tekton/home/npm
                name: npmrc
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm test
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
          volumes:
            - name: npmrc
              secret:
                optional: true
                secretName: npmrc
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            volumeMounts:
              - mountPath: /tekton/home/npm
                name: npmrc
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm test
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              env:
                - name: IMAGE
                  value: gcr.io/myproject/myimage
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build-cheese
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              env:
                - name: IMAGE
                  value: gcr.io/myproject/wine
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build-wine
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
          volumes:
            - name: npmrc
              secret:
                optional: true
                secretName: npmrc
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              env:
                - name: MY_NEW_ENV_VAR
                  value: this-is-a-new-value
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              envFrom:
                - configMapRef:
                    name: myconfigmap
                    optional: true
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/usr/bin/env sh
                echo "this is my custom script"
              workingDir: /workspace/mynewdir
            - args:
                - -c
                - echo this is a new custom command
              command:
                - bash
              computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
              volumeMounts:
                - mountPath: /foo/bar
                  name: my-new-volume
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 600m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            volumeMounts:
              - mountPath: /tekton/home/npm-something-else
                name: npmrc
            workingDir: /workspace/my-source
          steps:
            - computeResources: {}
              image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.19.0
              name: git-clone
              script: |
                #!/bin/sh
                export SUBDIR="source"
                echo "git cloning url: $REPO_URL version $PULL_PULL_SHA to dir: $SUBDIR"
                git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot}
                git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com}
                git config --global credential.helper store
                git clone $REPO_URL $SUBDIR
                cd $SUBDIR
                git checkout $PULL_PULL_SHA
                echo "checked out revision: $PULL_PULL_SHA to dir: $SUBDIR"
              workingDir: /workspace
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.62
              name: git-merge
              script: |
                #!/usr/bin/env sh
                jx gitops git merge variables
              workingDir: /workspace/source
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm test
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
            - command:
                - jx-updatebot
                - pr
              computeResources: {}
              image: ghcr.io/jenkins-x/jx-updatebot:0.0.82
              name: promote-release
          volumes:
            - name: npmrc
              secret:
                optional: true
                secretName: npmrc
  taskRunTemplate: {}
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            volumeMounts:
              - mountPath: /tekton/home/npm
                name: npmrc
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm test
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
            - computeResources: {}
              image: ghcr.io/jenkins-x/jx-updatebot:0.0.82
              name: promote-release
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx updatebot argo promote --target-git-url https://github.com/myorg/my-staging-repo
          volumes:
            - name: npmrc
              secret:
                optional: true
                secretName: npmrc
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:latest
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm test
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: cheese
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          sidecars:
            - computeResources: {}
              env:
                - name: START_XVFB
                  value: "false"
              image: selenium/standalone-chrome
              name: selenium
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            volumeMounts:
              - mountPath: /tekton/home/npm
                name: npmrc
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:12-slim
              name: build-npm-install
              script: |
                #!/bin/sh
                npm install
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm test
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-preview:0.0.143
              name: promote-jx-preview
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx preview create
          volumes:
            - name: npmrc
              secret:
                optional: true
                secretName: npmrc
  taskRunTemplate: {}
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: pullrequest
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          sidecars:
            - computeResources: {}
              image: xyz/json-server:0.1.15
              name: json-server
              script: |
                #!/bin/ash
                while [ ! -f /workspace/source/JsonServer/mocks.json ] ; do
                  echo "Waiting for mocks.json"
                  sleep 1
                done
                json-server --watch /workspace/source/JsonServer/mocks.json
              workspaces:
                - mountPath: ""
                  name: source
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            volumeMounts:
              - mountPath: /tekton/home/npm
                name: npmrc
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.19.0
              name: git-clone
              script: |
                #!/bin/sh
                export SUBDIR="source"
                echo "git cloning url: $REPO_URL version $PULL_BASE_SHA to dir: $SUBDIR"
                git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot}
                git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com}
                git config --global credential.helper store
                git clone $REPO_URL $SUBDIR
                cd $SUBDIR
                git checkout $PULL_BASE_SHA
                echo "checked out revision: $PULL_BASE_SHA to dir: $SUBDIR"
              workingDir: /workspace
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-boot:3.1.155
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: node:14-slim
              name: ""
            - computeResources: {}
              image: node:12-slim
              name: build-npm-test
              script: |
                #!/bin/sh
                yarn install
                CI=true DISPLAY=:99 yarn run test:unit
          volumes:
            - name: npmrc
              secret:
                optional: true
                secretName: npmrc
          workspaces:
            - description: The git repo will be cloned onto the volume backing this workspace
              mountPath: /workspace
              name: output
            - name: source
        workspaces:
          - name: source
            workspace: source
          - name: output
            workspace: output
    workspaces:
      - name: source
      - description: The git repo will be cloned onto the volume backing this workspace
        name: output
  taskRunTemplate:
    podTemplate: {}
    serviceAccountName: tekton-bot
  timeouts:
    pipeline: 12h0m0s
  workspaces:
    - emptyDir: {}
      name: source
    - emptyDir: {}
      name: output
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: release
spec:
  params:
    - name: BUILD_ID
      value: ""
    - name: JOB_NAME
      value: ""
    - name: JOB_SPEC
      value: ""
    - name: JOB_TYPE
      value: ""
    - name: PULL_BASE_REF
      value: ""
    - name: PULL_BASE_SHA
      value: ""
    - name: PULL_NUMBER
      value: ""
    - name: PULL_PULL_REF
      value: ""
    - name: PULL_PULL_SHA
      value: ""
    - name: PULL_REFS
      value: ""
    - name: REPO_NAME
      value: ""
    - name: REPO_OWNER
      value: ""
    - name: REPO_URL
      value: ""
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: '''the kind of job: postsubmit or presubmit'''
        name: JOB_TYPE
        type: string
      - description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: ""
        description: git revision to checkout (branch, tag, sha, refâ€¦)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          metadata: {}
          params:
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: '''the kind of job: postsubmit or presubmit'''
              name: JOB_TYPE
              type: string
            - description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - default: ""
              description: git revision to checkout (branch, tag, sha, refâ€¦)
              name: PULL_PULL_SHA
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
            - description: git url to clone
              name: REPO_URL
              type: string
          spec: null
          stepTemplate:
            computeResources:
              requests:
                cpu: 400m
                memory: 512Mi
            env:
              - name: _JAVA_OPTIONS
                value: -XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx192m
              - name: MAVEN_OPTS
                value: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=25 -Dmaven.wagon.http.retryHandler.count=3
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            volumeMounts:
              - mountPath: /root/.m2/
                name: maven-settings
              - mountPath: /root/.gnupg
                name: release-gpg
            workingDir: /workspace/source
          steps:
            - computeResources: {}
              image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.19.0
              name: git-clone
              script: |
                #!/bin/sh
                export SUBDIR="source"
                echo "git cloning url: $REPO_URL version $PULL_BASE_SHA to dir: $SUBDIR"
                git config --global --add user.name ${GIT_AUTHOR_NAME:-jenkins-x-bot}
                git config --global --add user.email ${GIT_AUTHOR_EMAIL:-jenkins-x@googlegroups.com}
                git config --global credential.helper store
                git clone $REPO_URL $SUBDIR
                cd $SUBDIR
                git checkout $PULL_BASE_SHA
                echo "checked out revision: $PULL_BASE_SHA to dir: $SUBDIR"
              workingDir: /workspace
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-release-version:2.2.5
              name: next-version
              script: |
                #!/usr/bin/env sh
                jx-release-version > VERSION
            - computeResources: {}
              image: ghcr.io/jenkins-x/jx-boot:3.1.335
              name: jx-variables
              script: |
                #!/usr/bin/env sh
                jx gitops variables
            - computeResources: {}
              image: maven:3.6-openjdk-11
              name: build-mvn-deploy
              script: |
                #!/usr/bin/env bash
                source .jx/variables.sh

                # modify the pom.xml
                echo "upgrading the pom to version $VERSION"
                mvn versions:set -DnewVersion=$VERSION

                mvn --no-transfer-progress clean deploy
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-registry:0.0.11
              name: check-registry
            - computeResources: {}
              image: gcr.io/kaniko-project/executor:debug-v1.3.0
              name: build-container-build
              script: |
                #!/busybox/sh
                source .jx/variables.sh
                cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
                /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=Dockerfile --destination=$PUSH_CONTAINER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
            - computeResources: {}
              image: gcr.io/jenkinsxio/jx-changelog:0.0.34
              name: promote-changelog
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh

                if [ -d "charts/$REPO_NAME" ]; then
                sed -i -e "s/^version:.*/version: $VERSION/" ./charts/$REPO_NAME/Chart.yaml
                sed -i -e "s/repository:.*/repository: $DOCKER_REGISTRY\/$DOCKER_REGISTRY_ORG\/$APP_NAME/" ./charts/$REPO_NAME/values.yaml
                sed -i -e "s/tag:.*/tag: $VERSION/" ./charts/$REPO_NAME/values.yaml;
                else echo no charts; fi

                jx changelog create --version v${VERSION}

                git add * || true
                git commit -a -m "chore: release $VERSION" --allow-empty
                git tag -fa v$VERSION -m "Release version $VERSION"
                git push --force origin v$VERSION
            - computeResources: {}
              image: ghcr.io/jenkins-x/jx-boot:3.1.335
              name: promote-helm-release
              script: |
                #!/usr/bin/env sh
                jx gitops helm release
            - computeResources: {}
              image: ghcr.io/jenkins-x/jx-promote:0.0.243
              name: promote-jx-promote
              script: |
                #!/usr/bin/env sh
                source .jx/variables.sh
                jx promote -b --all --timeout 1h --no-poll
          volumes:
            - name: maven-settings
              secret:
                secretName: jenkins-maven-settings
            - name: release-gpg
              secret:
                optional: true
                secretName: jenkins-release-gpg
          workspaces:
            - description: The git repo will be cloned onto the volume backing this workspace
              mountPath: /workspace
              name: output
        workspaces:
          - name: output
            workspace: output
    workspaces:
      - description: The git repo will be cloned onto the volume backing this workspace
        name: output
  taskRunTemplate:
    podTemplate: {}
    serviceAccountName: tekton-bot
  timeouts:
    pipeline: 240h0m0s
  workspaces:
    - emptyDir: {}
      name: output
status: {}
